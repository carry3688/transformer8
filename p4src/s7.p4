/* -*- P4_16 -*- */
#include <core.p4>
#include <v1model.p4>

/*
 * Standard ethernet header
 */
header ethernet_t {
    bit<48> dstAddr;
    bit<48> srcAddr;
    bit<16> etherType;
}

const bit<16> P4CALC_ETYPE = 0x1234;
const bit<8>  P4CALC_P     = 0x50;   // 'P'
const bit<8>  P4CALC_4     = 0x34;   // '4'
const bit<8>  P4CALC_VER   = 0x01;   // v0.1

const bit<32> w1_0_0 = 0xffff806f;
const bit<32> w1_0_1 = 0xffffe288;
const bit<32> w1_0_2 = 0xffff9c20;
const bit<32> w1_0_3 = 0x00006299;
const bit<32> w1_0_4 = 0x00009baf;
const bit<32> w1_0_5 = 0xffff1add;
const bit<32> w1_0_6 = 0x0000ae03;
const bit<32> w1_0_7 = 0x0000a324;
const bit<32> w1_0_8 = 0x0000d01f;
const bit<32> w1_0_9 = 0x0000adf5;
const bit<32> w1_0_10 = 0xffff2f0f;
const bit<32> w1_0_11 = 0xffffcab4;
const bit<32> w1_0_12 = 0x0000be50;
const bit<32> w1_0_13 = 0xffffcf06;
const bit<32> w1_0_14 = 0x00000922;
const bit<32> w1_0_15 = 0xffff73aa;
const bit<32> w1_0_16 = 0x00002512;
const bit<32> w1_0_17 = 0xffffcd7d;
const bit<32> w1_0_18 = 0xffff61e3;
const bit<32> w1_0_19 = 0xffff49b4;
const bit<32> w1_0_20 = 0x00007c55;
const bit<32> w1_0_21 = 0xffff909e;
const bit<32> w1_0_22 = 0xffff2c0c;
const bit<32> w1_0_23 = 0x0000dbb9;
const bit<32> w1_0_24 = 0x0000b126;
const bit<32> w1_0_25 = 0x00006c31;
const bit<32> w1_0_26 = 0x0000eecf;
const bit<32> w1_0_27 = 0x000032d9;
const bit<32> w1_0_28 = 0x0000bca0;
const bit<32> w1_0_29 = 0xfffffc68;
const bit<32> w1_0_30 = 0xffff22ea;
const bit<32> w1_0_31 = 0x0000ead1;
const bit<32> w1_1_0 = 0x00009571;
const bit<32> w1_1_1 = 0xffff6092;
const bit<32> w1_1_2 = 0xffff8e98;
const bit<32> w1_1_3 = 0x0000e762;
const bit<32> w1_1_4 = 0x000080b1;
const bit<32> w1_1_5 = 0xffff48a5;
const bit<32> w1_1_6 = 0xffffde5d;
const bit<32> w1_1_7 = 0x0000e274;
const bit<32> w1_1_8 = 0x00007e72;
const bit<32> w1_1_9 = 0xffff7121;
const bit<32> w1_1_10 = 0xffffccf2;
const bit<32> w1_1_11 = 0xffffe094;
const bit<32> w1_1_12 = 0xfffff14f;
const bit<32> w1_1_13 = 0xffffd601;
const bit<32> w1_1_14 = 0xffff61ca;
const bit<32> w1_1_15 = 0xffff7970;
const bit<32> w1_1_16 = 0xffff1795;
const bit<32> w1_1_17 = 0xffff2721;
const bit<32> w1_1_18 = 0xffff9aa0;
const bit<32> w1_1_19 = 0x00008fb2;
const bit<32> w1_1_20 = 0x0000295c;
const bit<32> w1_1_21 = 0x0000dde2;
const bit<32> w1_1_22 = 0x0000bdbb;
const bit<32> w1_1_23 = 0x0000e0c5;
const bit<32> w1_1_24 = 0x0000c454;
const bit<32> w1_1_25 = 0xffff04ec;
const bit<32> w1_1_26 = 0xffff5e5f;
const bit<32> w1_1_27 = 0x00006061;
const bit<32> w1_1_28 = 0xffffff62;
const bit<32> w1_1_29 = 0x0000844c;
const bit<32> w1_1_30 = 0xffff479c;
const bit<32> w1_1_31 = 0x0000f077;
const bit<32> w1_2_0 = 0xffffe87e;
const bit<32> w1_2_1 = 0xffff3c9d;
const bit<32> w1_2_2 = 0xffff08c9;
const bit<32> w1_2_3 = 0x00003bf9;
const bit<32> w1_2_4 = 0x000067fb;
const bit<32> w1_2_5 = 0x0000eeac;
const bit<32> w1_2_6 = 0xffff2667;
const bit<32> w1_2_7 = 0xffffddf6;
const bit<32> w1_2_8 = 0xffffd09b;
const bit<32> w1_2_9 = 0x0000b86b;
const bit<32> w1_2_10 = 0x00008227;
const bit<32> w1_2_11 = 0x000060cb;
const bit<32> w1_2_12 = 0xffff319c;
const bit<32> w1_2_13 = 0xffff9b09;
const bit<32> w1_2_14 = 0x0000c48f;
const bit<32> w1_2_15 = 0xffff12be;
const bit<32> w1_2_16 = 0x0000a60b;
const bit<32> w1_2_17 = 0xffffa6bc;
const bit<32> w1_2_18 = 0x0000f24c;
const bit<32> w1_2_19 = 0x00004686;
const bit<32> w1_2_20 = 0xffffdc06;
const bit<32> w1_2_21 = 0x0000def5;
const bit<32> w1_2_22 = 0x0000797e;
const bit<32> w1_2_23 = 0x000093db;
const bit<32> w1_2_24 = 0x00006a76;
const bit<32> w1_2_25 = 0x0000c608;
const bit<32> w1_2_26 = 0x0000dc8f;
const bit<32> w1_2_27 = 0xffff151f;
const bit<32> w1_2_28 = 0x00009acd;
const bit<32> w1_2_29 = 0xffff540d;
const bit<32> w1_2_30 = 0x0000bb45;
const bit<32> w1_2_31 = 0xffffccb5;
const bit<32> w1_3_0 = 0xffff4e55;
const bit<32> w1_3_1 = 0xffffebbc;
const bit<32> w1_3_2 = 0x0000a7b3;
const bit<32> w1_3_3 = 0xffff15b9;
const bit<32> w1_3_4 = 0x00001bad;
const bit<32> w1_3_5 = 0x0000829c;
const bit<32> w1_3_6 = 0x0000d2a0;
const bit<32> w1_3_7 = 0xffff0f0b;
const bit<32> w1_3_8 = 0x000030ac;
const bit<32> w1_3_9 = 0xffff6bc6;
const bit<32> w1_3_10 = 0x0000e2a2;
const bit<32> w1_3_11 = 0xffff0d88;
const bit<32> w1_3_12 = 0x000045ab;
const bit<32> w1_3_13 = 0x0000244e;
const bit<32> w1_3_14 = 0xffff47e0;
const bit<32> w1_3_15 = 0xffffa3a8;
const bit<32> w1_3_16 = 0x00000292;
const bit<32> w1_3_17 = 0x00007055;
const bit<32> w1_3_18 = 0xffff0049;
const bit<32> w1_3_19 = 0xffffa1a1;
const bit<32> w1_3_20 = 0xffff03ba;
const bit<32> w1_3_21 = 0xffffc7d9;
const bit<32> w1_3_22 = 0xffffcecc;
const bit<32> w1_3_23 = 0xffffe0eb;
const bit<32> w1_3_24 = 0x0000795f;
const bit<32> w1_3_25 = 0x0000789d;
const bit<32> w1_3_26 = 0x0000c31b;
const bit<32> w1_3_27 = 0x0000ea74;
const bit<32> w1_3_28 = 0xffffa8f6;
const bit<32> w1_3_29 = 0xffff1ab4;
const bit<32> w1_3_30 = 0x0000525e;
const bit<32> w1_3_31 = 0x0000d3f2;
const bit<32> w1_4_0 = 0xffff2480;
const bit<32> w1_4_1 = 0x000073be;
const bit<32> w1_4_2 = 0x0000b0e5;
const bit<32> w1_4_3 = 0x00005c41;
const bit<32> w1_4_4 = 0x000072fb;
const bit<32> w1_4_5 = 0xffff3060;
const bit<32> w1_4_6 = 0x0000ce6f;
const bit<32> w1_4_7 = 0x0000d38c;
const bit<32> w1_4_8 = 0x00009c39;
const bit<32> w1_4_9 = 0x0000be91;
const bit<32> w1_4_10 = 0x000046ce;
const bit<32> w1_4_11 = 0x00001b1c;
const bit<32> w1_4_12 = 0xffffde09;
const bit<32> w1_4_13 = 0x0000924f;
const bit<32> w1_4_14 = 0xffff7c2c;
const bit<32> w1_4_15 = 0xffff8848;
const bit<32> w1_4_16 = 0x00004644;
const bit<32> w1_4_17 = 0x000081ca;
const bit<32> w1_4_18 = 0xffff385b;
const bit<32> w1_4_19 = 0x0000a0af;
const bit<32> w1_4_20 = 0xffff8146;
const bit<32> w1_4_21 = 0x00003f3c;
const bit<32> w1_4_22 = 0x0000b485;
const bit<32> w1_4_23 = 0xffffdc14;
const bit<32> w1_4_24 = 0x00001616;
const bit<32> w1_4_25 = 0xffff1afc;
const bit<32> w1_4_26 = 0x0000a902;
const bit<32> w1_4_27 = 0x0000579d;
const bit<32> w1_4_28 = 0x0000e5d8;
const bit<32> w1_4_29 = 0x00008393;
const bit<32> w1_4_30 = 0x000085ab;
const bit<32> w1_4_31 = 0x0000f358;
const bit<32> w1_5_0 = 0xffff32dd;
const bit<32> w1_5_1 = 0xffff3352;
const bit<32> w1_5_2 = 0x0000b92e;
const bit<32> w1_5_3 = 0xffff9e84;
const bit<32> w1_5_4 = 0xffff79a6;
const bit<32> w1_5_5 = 0x0000bc81;
const bit<32> w1_5_6 = 0xffff0fbf;
const bit<32> w1_5_7 = 0x000083cc;
const bit<32> w1_5_8 = 0xffff2f18;
const bit<32> w1_5_9 = 0x0000200e;
const bit<32> w1_5_10 = 0x0000a752;
const bit<32> w1_5_11 = 0xffff93e4;
const bit<32> w1_5_12 = 0xffff3708;
const bit<32> w1_5_13 = 0xffff8b47;
const bit<32> w1_5_14 = 0xffff1175;
const bit<32> w1_5_15 = 0xffff50fe;
const bit<32> w1_5_16 = 0xffff4104;
const bit<32> w1_5_17 = 0x00008d13;
const bit<32> w1_5_18 = 0x0000843d;
const bit<32> w1_5_19 = 0xffff4a5c;
const bit<32> w1_5_20 = 0xffff0f2d;
const bit<32> w1_5_21 = 0xffff7135;
const bit<32> w1_5_22 = 0x00008b37;
const bit<32> w1_5_23 = 0x000034e6;
const bit<32> w1_5_24 = 0x0000ed10;
const bit<32> w1_5_25 = 0x00004064;
const bit<32> w1_5_26 = 0x000054d8;
const bit<32> w1_5_27 = 0xffff8d44;
const bit<32> w1_5_28 = 0xffff6875;
const bit<32> w1_5_29 = 0x00002c74;
const bit<32> w1_5_30 = 0x00000357;
const bit<32> w1_5_31 = 0x00004307;
const bit<32> w1_6_0 = 0xffff0106;
const bit<32> w1_6_1 = 0x00000a82;
const bit<32> w1_6_2 = 0x0000af5f;
const bit<32> w1_6_3 = 0x0000e965;
const bit<32> w1_6_4 = 0xffff0fdb;
const bit<32> w1_6_5 = 0x00003d79;
const bit<32> w1_6_6 = 0xffff5234;
const bit<32> w1_6_7 = 0x00001d2b;
const bit<32> w1_6_8 = 0xffff88c6;
const bit<32> w1_6_9 = 0x00000c9e;
const bit<32> w1_6_10 = 0xffffaa52;
const bit<32> w1_6_11 = 0x0000495a;
const bit<32> w1_6_12 = 0x00000282;
const bit<32> w1_6_13 = 0xffff137d;
const bit<32> w1_6_14 = 0xfffff758;
const bit<32> w1_6_15 = 0x000010a1;
const bit<32> w1_6_16 = 0x0000778b;
const bit<32> w1_6_17 = 0xffff9eb2;
const bit<32> w1_6_18 = 0xffff41d1;
const bit<32> w1_6_19 = 0x000099d7;
const bit<32> w1_6_20 = 0xffff17df;
const bit<32> w1_6_21 = 0x0000eee1;
const bit<32> w1_6_22 = 0x00005936;
const bit<32> w1_6_23 = 0x00009ada;
const bit<32> w1_6_24 = 0xffffa9c1;
const bit<32> w1_6_25 = 0x000091ca;
const bit<32> w1_6_26 = 0xffffe31a;
const bit<32> w1_6_27 = 0xffffeaac;
const bit<32> w1_6_28 = 0x00002b7a;
const bit<32> w1_6_29 = 0x0000cfd9;
const bit<32> w1_6_30 = 0xffff0beb;
const bit<32> w1_6_31 = 0x000049a4;
const bit<32> w1_7_0 = 0x0000519d;
const bit<32> w1_7_1 = 0xffff992f;
const bit<32> w1_7_2 = 0xfffffcb8;
const bit<32> w1_7_3 = 0xffff9451;
const bit<32> w1_7_4 = 0x00009d5d;
const bit<32> w1_7_5 = 0x0000a787;
const bit<32> w1_7_6 = 0xffff98c6;
const bit<32> w1_7_7 = 0x0000789b;
const bit<32> w1_7_8 = 0x00001c54;
const bit<32> w1_7_9 = 0xffff089b;
const bit<32> w1_7_10 = 0xffff4562;
const bit<32> w1_7_11 = 0x00006cf9;
const bit<32> w1_7_12 = 0x00004425;
const bit<32> w1_7_13 = 0x00003517;
const bit<32> w1_7_14 = 0xffff12bf;
const bit<32> w1_7_15 = 0xffffb1ba;
const bit<32> w1_7_16 = 0x0000bb2c;
const bit<32> w1_7_17 = 0x00008073;
const bit<32> w1_7_18 = 0x000023f3;
const bit<32> w1_7_19 = 0xffff1221;
const bit<32> w1_7_20 = 0xffff5694;
const bit<32> w1_7_21 = 0xffff1a36;
const bit<32> w1_7_22 = 0x0000203e;
const bit<32> w1_7_23 = 0x00002514;
const bit<32> w1_7_24 = 0xffff4119;
const bit<32> w1_7_25 = 0x00003a19;
const bit<32> w1_7_26 = 0xffffd447;
const bit<32> w1_7_27 = 0x0000569e;
const bit<32> w1_7_28 = 0x000053cf;
const bit<32> w1_7_29 = 0x00004d8b;
const bit<32> w1_7_30 = 0x000020ed;
const bit<32> w1_7_31 = 0xffff5fec;
const bit<32> w1_8_0 = 0x00002b09;
const bit<32> w1_8_1 = 0x000098b0;
const bit<32> w1_8_2 = 0x0000aea2;
const bit<32> w1_8_3 = 0xfffffaea;
const bit<32> w1_8_4 = 0xffff1535;
const bit<32> w1_8_5 = 0x0000adaa;
const bit<32> w1_8_6 = 0x00004874;
const bit<32> w1_8_7 = 0x00004b36;
const bit<32> w1_8_8 = 0x00008052;
const bit<32> w1_8_9 = 0xffffbe52;
const bit<32> w1_8_10 = 0x000097f1;
const bit<32> w1_8_11 = 0x0000f211;
const bit<32> w1_8_12 = 0x00006cb2;
const bit<32> w1_8_13 = 0xffff5af5;
const bit<32> w1_8_14 = 0xffff1b2f;
const bit<32> w1_8_15 = 0xffff86a4;
const bit<32> w1_8_16 = 0xffff360e;
const bit<32> w1_8_17 = 0x00001dda;
const bit<32> w1_8_18 = 0x00004c83;
const bit<32> w1_8_19 = 0x00004d3f;
const bit<32> w1_8_20 = 0xffffffce;
const bit<32> w1_8_21 = 0xffffdc2e;
const bit<32> w1_8_22 = 0xffff38b6;
const bit<32> w1_8_23 = 0xffff390b;
const bit<32> w1_8_24 = 0xffff493b;
const bit<32> w1_8_25 = 0xffff757c;
const bit<32> w1_8_26 = 0x000034b7;
const bit<32> w1_8_27 = 0xffff488a;
const bit<32> w1_8_28 = 0x00004562;
const bit<32> w1_8_29 = 0xffff1b64;
const bit<32> w1_8_30 = 0xffff0fe7;
const bit<32> w1_8_31 = 0x0000d37b;
const bit<32> w1_9_0 = 0xffff9fd1;
const bit<32> w1_9_1 = 0xffffa3b8;
const bit<32> w1_9_2 = 0xffffd83b;
const bit<32> w1_9_3 = 0xffff1957;
const bit<32> w1_9_4 = 0xffff6278;
const bit<32> w1_9_5 = 0x0000aacf;
const bit<32> w1_9_6 = 0xffffeac2;
const bit<32> w1_9_7 = 0x0000670f;
const bit<32> w1_9_8 = 0xffff3e93;
const bit<32> w1_9_9 = 0x00000ebe;
const bit<32> w1_9_10 = 0xffffef86;
const bit<32> w1_9_11 = 0xffff3e9e;
const bit<32> w1_9_12 = 0xffffc79b;
const bit<32> w1_9_13 = 0xffff75b4;
const bit<32> w1_9_14 = 0xffff3c6e;
const bit<32> w1_9_15 = 0xffff53ba;
const bit<32> w1_9_16 = 0x000021a7;
const bit<32> w1_9_17 = 0xffff1a54;
const bit<32> w1_9_18 = 0xffff116e;
const bit<32> w1_9_19 = 0x000059b8;
const bit<32> w1_9_20 = 0x00004e95;
const bit<32> w1_9_21 = 0xffffb5df;
const bit<32> w1_9_22 = 0xffffcfcd;
const bit<32> w1_9_23 = 0x00005474;
const bit<32> w1_9_24 = 0x0000a290;
const bit<32> w1_9_25 = 0xffff1440;
const bit<32> w1_9_26 = 0x000071eb;
const bit<32> w1_9_27 = 0xffff0bc5;
const bit<32> w1_9_28 = 0xffff350f;
const bit<32> w1_9_29 = 0xfffff4a3;
const bit<32> w1_9_30 = 0xffffe16b;
const bit<32> w1_9_31 = 0xffff31a6;
const bit<32> w1_10_0 = 0xffffabfb;
const bit<32> w1_10_1 = 0xffff46ac;
const bit<32> w1_10_2 = 0xfffff029;
const bit<32> w1_10_3 = 0xffffb358;
const bit<32> w1_10_4 = 0x0000d90c;
const bit<32> w1_10_5 = 0xffff6be4;
const bit<32> w1_10_6 = 0xffff7199;
const bit<32> w1_10_7 = 0x0000ee13;
const bit<32> w1_10_8 = 0xffff5a48;
const bit<32> w1_10_9 = 0xffff382e;
const bit<32> w1_10_10 = 0xffff3c1d;
const bit<32> w1_10_11 = 0xffff5d65;
const bit<32> w1_10_12 = 0x00009d90;
const bit<32> w1_10_13 = 0xffffbfff;
const bit<32> w1_10_14 = 0x00004143;
const bit<32> w1_10_15 = 0xffffdace;
const bit<32> w1_10_16 = 0x00003d46;
const bit<32> w1_10_17 = 0xffffd64c;
const bit<32> w1_10_18 = 0x00002cc2;
const bit<32> w1_10_19 = 0x0000cfe8;
const bit<32> w1_10_20 = 0x00008b44;
const bit<32> w1_10_21 = 0xffff0afb;
const bit<32> w1_10_22 = 0xffff6f97;
const bit<32> w1_10_23 = 0x000048cb;
const bit<32> w1_10_24 = 0xfffff3dd;
const bit<32> w1_10_25 = 0xffffd95b;
const bit<32> w1_10_26 = 0x00007046;
const bit<32> w1_10_27 = 0x0000b476;
const bit<32> w1_10_28 = 0xffff802f;
const bit<32> w1_10_29 = 0x0000e3de;
const bit<32> w1_10_30 = 0xfffff714;
const bit<32> w1_10_31 = 0x0000d7a7;
const bit<32> w1_11_0 = 0x0000e329;
const bit<32> w1_11_1 = 0xffff7fea;
const bit<32> w1_11_2 = 0x0000cc94;
const bit<32> w1_11_3 = 0x00005a53;
const bit<32> w1_11_4 = 0xffff3a38;
const bit<32> w1_11_5 = 0xffff88d6;
const bit<32> w1_11_6 = 0xffff7fbf;
const bit<32> w1_11_7 = 0x0000be11;
const bit<32> w1_11_8 = 0xffff6ae0;
const bit<32> w1_11_9 = 0xffff9673;
const bit<32> w1_11_10 = 0xffff473e;
const bit<32> w1_11_11 = 0x0000c1a6;
const bit<32> w1_11_12 = 0x0000bd8c;
const bit<32> w1_11_13 = 0xffff35ec;
const bit<32> w1_11_14 = 0x00005451;
const bit<32> w1_11_15 = 0xffff36a8;
const bit<32> w1_11_16 = 0xffffaf7b;
const bit<32> w1_11_17 = 0xffff0a42;
const bit<32> w1_11_18 = 0x000034d4;
const bit<32> w1_11_19 = 0xffff694e;
const bit<32> w1_11_20 = 0x000030be;
const bit<32> w1_11_21 = 0xffff2c37;
const bit<32> w1_11_22 = 0xfffff353;
const bit<32> w1_11_23 = 0xffffbd81;
const bit<32> w1_11_24 = 0xffffb80a;
const bit<32> w1_11_25 = 0xffff2102;
const bit<32> w1_11_26 = 0x0000eb20;
const bit<32> w1_11_27 = 0x0000d011;
const bit<32> w1_11_28 = 0xfffff827;
const bit<32> w1_11_29 = 0x0000eb22;
const bit<32> w1_11_30 = 0x0000b558;
const bit<32> w1_11_31 = 0xffffa238;
const bit<32> w1_12_0 = 0xffffce67;
const bit<32> w1_12_1 = 0x0000c2fd;
const bit<32> w1_12_2 = 0xffff9bca;
const bit<32> w1_12_3 = 0xffff7042;
const bit<32> w1_12_4 = 0xffff5471;
const bit<32> w1_12_5 = 0xffff0aac;
const bit<32> w1_12_6 = 0x0000930e;
const bit<32> w1_12_7 = 0x000031c1;
const bit<32> w1_12_8 = 0xffffb613;
const bit<32> w1_12_9 = 0xffff7ff0;
const bit<32> w1_12_10 = 0x00009871;
const bit<32> w1_12_11 = 0xffffaf3c;
const bit<32> w1_12_12 = 0x0000ab19;
const bit<32> w1_12_13 = 0xffff1248;
const bit<32> w1_12_14 = 0xffffbb97;
const bit<32> w1_12_15 = 0x000078e8;
const bit<32> w1_12_16 = 0x0000978c;
const bit<32> w1_12_17 = 0x0000da95;
const bit<32> w1_12_18 = 0x000073f5;
const bit<32> w1_12_19 = 0xffff7479;
const bit<32> w1_12_20 = 0x00006699;
const bit<32> w1_12_21 = 0x000052db;
const bit<32> w1_12_22 = 0xffffdaa6;
const bit<32> w1_12_23 = 0xffffd128;
const bit<32> w1_12_24 = 0xffff0912;
const bit<32> w1_12_25 = 0x0000740d;
const bit<32> w1_12_26 = 0x0000ca13;
const bit<32> w1_12_27 = 0xfffffea5;
const bit<32> w1_12_28 = 0xffff53a7;
const bit<32> w1_12_29 = 0xffffa001;
const bit<32> w1_12_30 = 0x0000e31c;
const bit<32> w1_12_31 = 0xffff9169;
const bit<32> w1_13_0 = 0x0000d4f9;
const bit<32> w1_13_1 = 0x00002c3c;
const bit<32> w1_13_2 = 0xffffd3f6;
const bit<32> w1_13_3 = 0x00009f82;
const bit<32> w1_13_4 = 0xffff8a90;
const bit<32> w1_13_5 = 0x0000b35a;
const bit<32> w1_13_6 = 0x0000877b;
const bit<32> w1_13_7 = 0xffff3f44;
const bit<32> w1_13_8 = 0xffff385f;
const bit<32> w1_13_9 = 0x0000a191;
const bit<32> w1_13_10 = 0xffff0c06;
const bit<32> w1_13_11 = 0xffffc20c;
const bit<32> w1_13_12 = 0x00009ae1;
const bit<32> w1_13_13 = 0xffff727a;
const bit<32> w1_13_14 = 0x000083de;
const bit<32> w1_13_15 = 0xfffff79e;
const bit<32> w1_13_16 = 0x00007fde;
const bit<32> w1_13_17 = 0xffff568e;
const bit<32> w1_13_18 = 0x00001d80;
const bit<32> w1_13_19 = 0xffff8f51;
const bit<32> w1_13_20 = 0xffffb8a9;
const bit<32> w1_13_21 = 0x000099f6;
const bit<32> w1_13_22 = 0xfffff610;
const bit<32> w1_13_23 = 0x0000ebe6;
const bit<32> w1_13_24 = 0x00008898;
const bit<32> w1_13_25 = 0x00007f92;
const bit<32> w1_13_26 = 0x00009656;
const bit<32> w1_13_27 = 0xffffc2b6;
const bit<32> w1_13_28 = 0x00005af3;
const bit<32> w1_13_29 = 0x00006d16;
const bit<32> w1_13_30 = 0x000052da;
const bit<32> w1_13_31 = 0xffffe9ed;
const bit<32> w1_14_0 = 0xffffd0b8;
const bit<32> w1_14_1 = 0x0000db07;
const bit<32> w1_14_2 = 0x00004d47;
const bit<32> w1_14_3 = 0xffffcf21;
const bit<32> w1_14_4 = 0x000040a6;
const bit<32> w1_14_5 = 0xffff17bd;
const bit<32> w1_14_6 = 0x00000c8c;
const bit<32> w1_14_7 = 0xfffff248;
const bit<32> w1_14_8 = 0x000056da;
const bit<32> w1_14_9 = 0xffff085d;
const bit<32> w1_14_10 = 0x0000f767;
const bit<32> w1_14_11 = 0xffffbb34;
const bit<32> w1_14_12 = 0x000009c3;
const bit<32> w1_14_13 = 0x0000a260;
const bit<32> w1_14_14 = 0x000024d0;
const bit<32> w1_14_15 = 0xffffa6e6;
const bit<32> w1_14_16 = 0x0000fa2d;
const bit<32> w1_14_17 = 0xffff45a8;
const bit<32> w1_14_18 = 0x000060de;
const bit<32> w1_14_19 = 0xffffa63d;
const bit<32> w1_14_20 = 0xffffa280;
const bit<32> w1_14_21 = 0x0000213c;
const bit<32> w1_14_22 = 0xffff9b45;
const bit<32> w1_14_23 = 0x00008ca1;
const bit<32> w1_14_24 = 0xffffeccc;
const bit<32> w1_14_25 = 0x0000a024;
const bit<32> w1_14_26 = 0xffffe99d;
const bit<32> w1_14_27 = 0xffff9450;
const bit<32> w1_14_28 = 0x00001f9f;
const bit<32> w1_14_29 = 0x00005f93;
const bit<32> w1_14_30 = 0x00005f52;
const bit<32> w1_14_31 = 0x0000c1db;
const bit<32> w1_15_0 = 0x00001bb5;
const bit<32> w1_15_1 = 0xffffca7e;
const bit<32> w1_15_2 = 0xffff8328;
const bit<32> w1_15_3 = 0xffff4806;
const bit<32> w1_15_4 = 0x00004dce;
const bit<32> w1_15_5 = 0xffff5f25;
const bit<32> w1_15_6 = 0xfffff67f;
const bit<32> w1_15_7 = 0x0000a521;
const bit<32> w1_15_8 = 0xffffc1d3;
const bit<32> w1_15_9 = 0x0000115d;
const bit<32> w1_15_10 = 0xffffe874;
const bit<32> w1_15_11 = 0xffff00e3;
const bit<32> w1_15_12 = 0x0000ab54;
const bit<32> w1_15_13 = 0x00002521;
const bit<32> w1_15_14 = 0xffffcf9f;
const bit<32> w1_15_15 = 0x0000dc2f;
const bit<32> w1_15_16 = 0x0000b5ad;
const bit<32> w1_15_17 = 0xffff3355;
const bit<32> w1_15_18 = 0xffff8113;
const bit<32> w1_15_19 = 0x00007001;
const bit<32> w1_15_20 = 0x00007e0f;
const bit<32> w1_15_21 = 0x000053dd;
const bit<32> w1_15_22 = 0xffff5c88;
const bit<32> w1_15_23 = 0x000015ec;
const bit<32> w1_15_24 = 0x000004cc;
const bit<32> w1_15_25 = 0xffffc0d7;
const bit<32> w1_15_26 = 0x00004504;
const bit<32> w1_15_27 = 0x000025ea;
const bit<32> w1_15_28 = 0xffff68c1;
const bit<32> w1_15_29 = 0xffffbdc3;
const bit<32> w1_15_30 = 0xffffce5e;
const bit<32> w1_15_31 = 0x0000f089;
const bit<32> w1_16_0 = 0xfffff4a2;
const bit<32> w1_16_1 = 0x00006d20;
const bit<32> w1_16_2 = 0x000078d6;
const bit<32> w1_16_3 = 0xffff249b;
const bit<32> w1_16_4 = 0x00000a43;
const bit<32> w1_16_5 = 0xffff73bf;
const bit<32> w1_16_6 = 0xffff6e7f;
const bit<32> w1_16_7 = 0xffffee99;
const bit<32> w1_16_8 = 0xffff7e8f;
const bit<32> w1_16_9 = 0x0000e542;
const bit<32> w1_16_10 = 0xffffa8a9;
const bit<32> w1_16_11 = 0xffff118c;
const bit<32> w1_16_12 = 0xffff3ae3;
const bit<32> w1_16_13 = 0xffff16eb;
const bit<32> w1_16_14 = 0x00002843;
const bit<32> w1_16_15 = 0xffff3e38;
const bit<32> w1_16_16 = 0x00005933;
const bit<32> w1_16_17 = 0x0000740d;
const bit<32> w1_16_18 = 0x00001911;
const bit<32> w1_16_19 = 0x00001dff;
const bit<32> w1_16_20 = 0x000068ec;
const bit<32> w1_16_21 = 0x00008d6e;
const bit<32> w1_16_22 = 0xffffbf91;
const bit<32> w1_16_23 = 0xffff24b7;
const bit<32> w1_16_24 = 0xffff7102;
const bit<32> w1_16_25 = 0x0000fc14;
const bit<32> w1_16_26 = 0x0000ea5b;
const bit<32> w1_16_27 = 0x0000f441;
const bit<32> w1_16_28 = 0xffff7594;
const bit<32> w1_16_29 = 0xfffffc0c;
const bit<32> w1_16_30 = 0xffff086d;
const bit<32> w1_16_31 = 0x0000d5aa;
const bit<32> w1_17_0 = 0xffff2126;
const bit<32> w1_17_1 = 0xffff354f;
const bit<32> w1_17_2 = 0x0000f039;
const bit<32> w1_17_3 = 0x00003b6b;
const bit<32> w1_17_4 = 0xffff8c2f;
const bit<32> w1_17_5 = 0x0000256f;
const bit<32> w1_17_6 = 0x0000c55f;
const bit<32> w1_17_7 = 0x0000a48a;
const bit<32> w1_17_8 = 0xffff25e3;
const bit<32> w1_17_9 = 0xffff9cd6;
const bit<32> w1_17_10 = 0xffff47f2;
const bit<32> w1_17_11 = 0xffff91e5;
const bit<32> w1_17_12 = 0x000088cc;
const bit<32> w1_17_13 = 0xffff0ab3;
const bit<32> w1_17_14 = 0x0000c89a;
const bit<32> w1_17_15 = 0x00000cf2;
const bit<32> w1_17_16 = 0x00009ca6;
const bit<32> w1_17_17 = 0x00000438;
const bit<32> w1_17_18 = 0xfffff39e;
const bit<32> w1_17_19 = 0x00006f42;
const bit<32> w1_17_20 = 0xffffa2c1;
const bit<32> w1_17_21 = 0x00002204;
const bit<32> w1_17_22 = 0x00007c47;
const bit<32> w1_17_23 = 0xffff0438;
const bit<32> w1_17_24 = 0xffff0078;
const bit<32> w1_17_25 = 0x00008085;
const bit<32> w1_17_26 = 0x00003ce0;
const bit<32> w1_17_27 = 0xffffff9a;
const bit<32> w1_17_28 = 0xfffffbd4;
const bit<32> w1_17_29 = 0xffff5f1c;
const bit<32> w1_17_30 = 0x000031b0;
const bit<32> w1_17_31 = 0xffffb6a9;
const bit<32> w1_18_0 = 0xffffd45f;
const bit<32> w1_18_1 = 0xffffeebb;
const bit<32> w1_18_2 = 0xffff2184;
const bit<32> w1_18_3 = 0xffff63c3;
const bit<32> w1_18_4 = 0x0000a42c;
const bit<32> w1_18_5 = 0x00001170;
const bit<32> w1_18_6 = 0x00004f65;
const bit<32> w1_18_7 = 0xffffc6b1;
const bit<32> w1_18_8 = 0xffff71b2;
const bit<32> w1_18_9 = 0x0000e31c;
const bit<32> w1_18_10 = 0x000020fa;
const bit<32> w1_18_11 = 0x0000a53e;
const bit<32> w1_18_12 = 0xfffffe3f;
const bit<32> w1_18_13 = 0xffff9984;
const bit<32> w1_18_14 = 0x00003e5e;
const bit<32> w1_18_15 = 0xffff52a9;
const bit<32> w1_18_16 = 0xffffb105;
const bit<32> w1_18_17 = 0xffffd111;
const bit<32> w1_18_18 = 0xffff26bd;
const bit<32> w1_18_19 = 0xffff4715;
const bit<32> w1_18_20 = 0xffffc5cd;
const bit<32> w1_18_21 = 0xffffc767;
const bit<32> w1_18_22 = 0x00003e7c;
const bit<32> w1_18_23 = 0x000031cb;
const bit<32> w1_18_24 = 0xffff9203;
const bit<32> w1_18_25 = 0x00001ca0;
const bit<32> w1_18_26 = 0xffffc702;
const bit<32> w1_18_27 = 0x0000c208;
const bit<32> w1_18_28 = 0x00001fd8;
const bit<32> w1_18_29 = 0x0000afc1;
const bit<32> w1_18_30 = 0x00006afc;
const bit<32> w1_18_31 = 0x0000e9e0;
const bit<32> w1_19_0 = 0x000014ed;
const bit<32> w1_19_1 = 0x00001e42;
const bit<32> w1_19_2 = 0x00004556;
const bit<32> w1_19_3 = 0xffffc3fb;
const bit<32> w1_19_4 = 0x0000ba59;
const bit<32> w1_19_5 = 0xffff648b;
const bit<32> w1_19_6 = 0x0000e53c;
const bit<32> w1_19_7 = 0xfffffd9a;
const bit<32> w1_19_8 = 0x0000068e;
const bit<32> w1_19_9 = 0x000007c5;
const bit<32> w1_19_10 = 0xffff28a8;
const bit<32> w1_19_11 = 0xffffa6f2;
const bit<32> w1_19_12 = 0x0000b00a;
const bit<32> w1_19_13 = 0x000078df;
const bit<32> w1_19_14 = 0xffff138f;
const bit<32> w1_19_15 = 0x0000799b;
const bit<32> w1_19_16 = 0x00004e45;
const bit<32> w1_19_17 = 0x00002435;
const bit<32> w1_19_18 = 0xffff2f7d;
const bit<32> w1_19_19 = 0x000037f9;
const bit<32> w1_19_20 = 0xffff2568;
const bit<32> w1_19_21 = 0x00007578;
const bit<32> w1_19_22 = 0x0000e7e4;
const bit<32> w1_19_23 = 0x0000d069;
const bit<32> w1_19_24 = 0xffff1d39;
const bit<32> w1_19_25 = 0x0000dee9;
const bit<32> w1_19_26 = 0x00009d85;
const bit<32> w1_19_27 = 0xffff7055;
const bit<32> w1_19_28 = 0xffff767e;
const bit<32> w1_19_29 = 0x00008ac4;
const bit<32> w1_19_30 = 0xffffde6f;
const bit<32> w1_19_31 = 0x00003cf4;
const bit<32> w1_20_0 = 0x0000daf3;
const bit<32> w1_20_1 = 0xffffb343;
const bit<32> w1_20_2 = 0x0000ba26;
const bit<32> w1_20_3 = 0xffff9040;
const bit<32> w1_20_4 = 0xffff06a8;
const bit<32> w1_20_5 = 0x0000edc2;
const bit<32> w1_20_6 = 0xffffec05;
const bit<32> w1_20_7 = 0xffff7414;
const bit<32> w1_20_8 = 0x00003d10;
const bit<32> w1_20_9 = 0x00006949;
const bit<32> w1_20_10 = 0xffff2d8d;
const bit<32> w1_20_11 = 0xffffa6a9;
const bit<32> w1_20_12 = 0xffff7460;
const bit<32> w1_20_13 = 0x00009d19;
const bit<32> w1_20_14 = 0x0000d8d1;
const bit<32> w1_20_15 = 0xffffe573;
const bit<32> w1_20_16 = 0x0000c304;
const bit<32> w1_20_17 = 0xffff10de;
const bit<32> w1_20_18 = 0xffff9aff;
const bit<32> w1_20_19 = 0xfffff56b;
const bit<32> w1_20_20 = 0x0000b0c6;
const bit<32> w1_20_21 = 0xffff68b1;
const bit<32> w1_20_22 = 0xffff21d2;
const bit<32> w1_20_23 = 0x00004a82;
const bit<32> w1_20_24 = 0xffffc8b5;
const bit<32> w1_20_25 = 0xffff7844;
const bit<32> w1_20_26 = 0x00001ea5;
const bit<32> w1_20_27 = 0xffff207f;
const bit<32> w1_20_28 = 0xffff611f;
const bit<32> w1_20_29 = 0x0000eab9;
const bit<32> w1_20_30 = 0xffffd19d;
const bit<32> w1_20_31 = 0x000021a9;
const bit<32> w1_21_0 = 0xffff9155;
const bit<32> w1_21_1 = 0x0000b61e;
const bit<32> w1_21_2 = 0x0000c818;
const bit<32> w1_21_3 = 0x0000f91c;
const bit<32> w1_21_4 = 0x000066c3;
const bit<32> w1_21_5 = 0x000094b2;
const bit<32> w1_21_6 = 0xfffff714;
const bit<32> w1_21_7 = 0x000039d6;
const bit<32> w1_21_8 = 0xffff4f6f;
const bit<32> w1_21_9 = 0x000055d8;
const bit<32> w1_21_10 = 0x0000ecad;
const bit<32> w1_21_11 = 0x00006785;
const bit<32> w1_21_12 = 0xffff99ed;
const bit<32> w1_21_13 = 0x000020b4;
const bit<32> w1_21_14 = 0x0000d9e3;
const bit<32> w1_21_15 = 0x0000eea0;
const bit<32> w1_21_16 = 0xffff15fb;
const bit<32> w1_21_17 = 0xffff7ce8;
const bit<32> w1_21_18 = 0x0000bc5b;
const bit<32> w1_21_19 = 0xffff0683;
const bit<32> w1_21_20 = 0xffff9dd7;
const bit<32> w1_21_21 = 0x0000bec0;
const bit<32> w1_21_22 = 0xffff4abd;
const bit<32> w1_21_23 = 0x00002b47;
const bit<32> w1_21_24 = 0xfffff35f;
const bit<32> w1_21_25 = 0x0000ba26;
const bit<32> w1_21_26 = 0x00006492;
const bit<32> w1_21_27 = 0xffffa70e;
const bit<32> w1_21_28 = 0xffff445c;
const bit<32> w1_21_29 = 0xffff5673;
const bit<32> w1_21_30 = 0x000027cf;
const bit<32> w1_21_31 = 0x000053f4;
const bit<32> w1_22_0 = 0x00001f42;
const bit<32> w1_22_1 = 0xffffb911;
const bit<32> w1_22_2 = 0x0000aae4;
const bit<32> w1_22_3 = 0xffff3601;
const bit<32> w1_22_4 = 0x0000ed17;
const bit<32> w1_22_5 = 0xffffa36e;
const bit<32> w1_22_6 = 0xffff2a08;
const bit<32> w1_22_7 = 0xffff321d;
const bit<32> w1_22_8 = 0x0000328e;
const bit<32> w1_22_9 = 0xffff6101;
const bit<32> w1_22_10 = 0x0000af04;
const bit<32> w1_22_11 = 0x0000a7e2;
const bit<32> w1_22_12 = 0xffffe207;
const bit<32> w1_22_13 = 0x0000b9b5;
const bit<32> w1_22_14 = 0x0000be4e;
const bit<32> w1_22_15 = 0xffffec51;
const bit<32> w1_22_16 = 0x000069b1;
const bit<32> w1_22_17 = 0xffffd094;
const bit<32> w1_22_18 = 0x000046ec;
const bit<32> w1_22_19 = 0xffff776a;
const bit<32> w1_22_20 = 0x00005cd2;
const bit<32> w1_22_21 = 0xffff23f8;
const bit<32> w1_22_22 = 0xffff85fc;
const bit<32> w1_22_23 = 0x00001f36;
const bit<32> w1_22_24 = 0xffffaee5;
const bit<32> w1_22_25 = 0x0000e7ec;
const bit<32> w1_22_26 = 0x00005282;
const bit<32> w1_22_27 = 0xffffb709;
const bit<32> w1_22_28 = 0xfffffa93;
const bit<32> w1_22_29 = 0x00009aa8;
const bit<32> w1_22_30 = 0x000043a1;
const bit<32> w1_22_31 = 0x0000a81d;
const bit<32> w1_23_0 = 0x0000e5f8;
const bit<32> w1_23_1 = 0xffffe7c6;
const bit<32> w1_23_2 = 0x0000b691;
const bit<32> w1_23_3 = 0xffff1ddf;
const bit<32> w1_23_4 = 0x0000abff;
const bit<32> w1_23_5 = 0x000014cd;
const bit<32> w1_23_6 = 0xffff4d67;
const bit<32> w1_23_7 = 0xffff0357;
const bit<32> w1_23_8 = 0xffffa08b;
const bit<32> w1_23_9 = 0x0000cd93;
const bit<32> w1_23_10 = 0x00002538;
const bit<32> w1_23_11 = 0xffffa972;
const bit<32> w1_23_12 = 0x00009b4a;
const bit<32> w1_23_13 = 0x00006d18;
const bit<32> w1_23_14 = 0x0000329d;
const bit<32> w1_23_15 = 0xffff06d9;
const bit<32> w1_23_16 = 0x0000a756;
const bit<32> w1_23_17 = 0xffffe6ae;
const bit<32> w1_23_18 = 0xffffa23e;
const bit<32> w1_23_19 = 0x0000e043;
const bit<32> w1_23_20 = 0x0000b844;
const bit<32> w1_23_21 = 0xffffd957;
const bit<32> w1_23_22 = 0x00001170;
const bit<32> w1_23_23 = 0xffff7b28;
const bit<32> w1_23_24 = 0xffffb8b1;
const bit<32> w1_23_25 = 0xffff1fe7;
const bit<32> w1_23_26 = 0x0000c7d2;
const bit<32> w1_23_27 = 0x000077b5;
const bit<32> w1_23_28 = 0x00008a3e;
const bit<32> w1_23_29 = 0xffffa3b1;
const bit<32> w1_23_30 = 0xfffff990;
const bit<32> w1_23_31 = 0xffffe4f1;
const bit<32> w1_24_0 = 0xffff80a1;
const bit<32> w1_24_1 = 0x000063c9;
const bit<32> w1_24_2 = 0x00000cb1;
const bit<32> w1_24_3 = 0x0000d0eb;
const bit<32> w1_24_4 = 0x00005267;
const bit<32> w1_24_5 = 0x0000bb00;
const bit<32> w1_24_6 = 0x0000832a;
const bit<32> w1_24_7 = 0xffffe7a5;
const bit<32> w1_24_8 = 0xffffcd56;
const bit<32> w1_24_9 = 0xffff615a;
const bit<32> w1_24_10 = 0x0000c45d;
const bit<32> w1_24_11 = 0xffff8076;
const bit<32> w1_24_12 = 0xffff4521;
const bit<32> w1_24_13 = 0x00008a02;
const bit<32> w1_24_14 = 0x0000f2d5;
const bit<32> w1_24_15 = 0xffffc46a;
const bit<32> w1_24_16 = 0x00008997;
const bit<32> w1_24_17 = 0x0000a657;
const bit<32> w1_24_18 = 0xffffcf1c;
const bit<32> w1_24_19 = 0xffffed9f;
const bit<32> w1_24_20 = 0x0000c931;
const bit<32> w1_24_21 = 0x00004ce3;
const bit<32> w1_24_22 = 0xffff8f74;
const bit<32> w1_24_23 = 0xffff2c37;
const bit<32> w1_24_24 = 0x00003d6c;
const bit<32> w1_24_25 = 0xffffcd1b;
const bit<32> w1_24_26 = 0xffff8336;
const bit<32> w1_24_27 = 0x00009ac0;
const bit<32> w1_24_28 = 0x00005720;
const bit<32> w1_24_29 = 0x00002b25;
const bit<32> w1_24_30 = 0xffffdd26;
const bit<32> w1_24_31 = 0xffffd6ab;
const bit<32> w1_25_0 = 0x00000019;
const bit<32> w1_25_1 = 0xffffa9cb;
const bit<32> w1_25_2 = 0xffff7933;
const bit<32> w1_25_3 = 0x00000324;
const bit<32> w1_25_4 = 0x000079e4;
const bit<32> w1_25_5 = 0xfffffa2c;
const bit<32> w1_25_6 = 0xffff0f55;
const bit<32> w1_25_7 = 0xffff6503;
const bit<32> w1_25_8 = 0x0000df26;
const bit<32> w1_25_9 = 0xfffffd3d;
const bit<32> w1_25_10 = 0xffff217e;
const bit<32> w1_25_11 = 0xffff1630;
const bit<32> w1_25_12 = 0x0000817d;
const bit<32> w1_25_13 = 0x00001c5f;
const bit<32> w1_25_14 = 0xffffd388;
const bit<32> w1_25_15 = 0xffffea8f;
const bit<32> w1_25_16 = 0x000069ed;
const bit<32> w1_25_17 = 0xffff3557;
const bit<32> w1_25_18 = 0x00008cdf;
const bit<32> w1_25_19 = 0x00007e0d;
const bit<32> w1_25_20 = 0xffff91b0;
const bit<32> w1_25_21 = 0xffff83cc;
const bit<32> w1_25_22 = 0x00009088;
const bit<32> w1_25_23 = 0xffffb860;
const bit<32> w1_25_24 = 0x0000668c;
const bit<32> w1_25_25 = 0xffffe92a;
const bit<32> w1_25_26 = 0x000044d3;
const bit<32> w1_25_27 = 0x0000a35c;
const bit<32> w1_25_28 = 0x00005f62;
const bit<32> w1_25_29 = 0x0000acd3;
const bit<32> w1_25_30 = 0xffff274b;
const bit<32> w1_25_31 = 0xffffb709;
const bit<32> w1_26_0 = 0x0000dab7;
const bit<32> w1_26_1 = 0xffff5680;
const bit<32> w1_26_2 = 0xffff69c6;
const bit<32> w1_26_3 = 0x0000c8f7;
const bit<32> w1_26_4 = 0x0000f151;
const bit<32> w1_26_5 = 0xffff9fd8;
const bit<32> w1_26_6 = 0xfffff871;
const bit<32> w1_26_7 = 0x00005fc2;
const bit<32> w1_26_8 = 0xffff15ea;
const bit<32> w1_26_9 = 0xffff7379;
const bit<32> w1_26_10 = 0x0000fbc8;
const bit<32> w1_26_11 = 0x000032ce;
const bit<32> w1_26_12 = 0x00006988;
const bit<32> w1_26_13 = 0xffffeaa6;
const bit<32> w1_26_14 = 0x00002ce0;
const bit<32> w1_26_15 = 0xfffff1f8;
const bit<32> w1_26_16 = 0xffffa716;
const bit<32> w1_26_17 = 0xffff5eaf;
const bit<32> w1_26_18 = 0x00008fb2;
const bit<32> w1_26_19 = 0x00004129;
const bit<32> w1_26_20 = 0xffff672c;
const bit<32> w1_26_21 = 0xffff0309;
const bit<32> w1_26_22 = 0x000028eb;
const bit<32> w1_26_23 = 0x00002552;
const bit<32> w1_26_24 = 0xffff2a7d;
const bit<32> w1_26_25 = 0xffffabf2;
const bit<32> w1_26_26 = 0xffffebb0;
const bit<32> w1_26_27 = 0x00001529;
const bit<32> w1_26_28 = 0xffff6e63;
const bit<32> w1_26_29 = 0xffff6585;
const bit<32> w1_26_30 = 0x000016ec;
const bit<32> w1_26_31 = 0x0000c6a8;
const bit<32> w1_27_0 = 0xffff647f;
const bit<32> w1_27_1 = 0x000042a8;
const bit<32> w1_27_2 = 0xffff0fd5;
const bit<32> w1_27_3 = 0x0000a04f;
const bit<32> w1_27_4 = 0x0000a17e;
const bit<32> w1_27_5 = 0x0000477a;
const bit<32> w1_27_6 = 0xffffdf47;
const bit<32> w1_27_7 = 0x0000951f;
const bit<32> w1_27_8 = 0xffff524a;
const bit<32> w1_27_9 = 0xffff216b;
const bit<32> w1_27_10 = 0x00002ecd;
const bit<32> w1_27_11 = 0x00004ecc;
const bit<32> w1_27_12 = 0xffff0c6f;
const bit<32> w1_27_13 = 0x0000f67c;
const bit<32> w1_27_14 = 0x00000640;
const bit<32> w1_27_15 = 0x0000a48f;
const bit<32> w1_27_16 = 0x00008927;
const bit<32> w1_27_17 = 0x00005eb8;
const bit<32> w1_27_18 = 0xffff99ed;
const bit<32> w1_27_19 = 0x000041da;
const bit<32> w1_27_20 = 0xffff8179;
const bit<32> w1_27_21 = 0xffff4ab4;
const bit<32> w1_27_22 = 0xffff38ed;
const bit<32> w1_27_23 = 0x00005783;
const bit<32> w1_27_24 = 0xffff1e73;
const bit<32> w1_27_25 = 0xffff9bc6;
const bit<32> w1_27_26 = 0x0000e140;
const bit<32> w1_27_27 = 0x00006b85;
const bit<32> w1_27_28 = 0x00005816;
const bit<32> w1_27_29 = 0xffff4352;
const bit<32> w1_27_30 = 0x00008920;
const bit<32> w1_27_31 = 0x0000f51e;
const bit<32> w1_28_0 = 0xffffe848;
const bit<32> w1_28_1 = 0x000063ce;
const bit<32> w1_28_2 = 0xffffd782;
const bit<32> w1_28_3 = 0xffff0f65;
const bit<32> w1_28_4 = 0xffff4b9e;
const bit<32> w1_28_5 = 0xffff8d5b;
const bit<32> w1_28_6 = 0x0000dfbc;
const bit<32> w1_28_7 = 0x0000da34;
const bit<32> w1_28_8 = 0x0000434e;
const bit<32> w1_28_9 = 0x00008bee;
const bit<32> w1_28_10 = 0xffff0d97;
const bit<32> w1_28_11 = 0x000057cd;
const bit<32> w1_28_12 = 0x0000b1c4;
const bit<32> w1_28_13 = 0x00000a2f;
const bit<32> w1_28_14 = 0xffffc3d5;
const bit<32> w1_28_15 = 0xffff8658;
const bit<32> w1_28_16 = 0x00002da5;
const bit<32> w1_28_17 = 0xffff2832;
const bit<32> w1_28_18 = 0x000072a9;
const bit<32> w1_28_19 = 0xffff79b1;
const bit<32> w1_28_20 = 0x0000f3ae;
const bit<32> w1_28_21 = 0xffffeb88;
const bit<32> w1_28_22 = 0x00002c69;
const bit<32> w1_28_23 = 0xffffd058;
const bit<32> w1_28_24 = 0xffffdac2;
const bit<32> w1_28_25 = 0x0000cd8d;
const bit<32> w1_28_26 = 0x00005c76;
const bit<32> w1_28_27 = 0x000039a5;
const bit<32> w1_28_28 = 0xffff5f8c;
const bit<32> w1_28_29 = 0xffff1d59;
const bit<32> w1_28_30 = 0x0000976a;
const bit<32> w1_28_31 = 0xffff5053;
const bit<32> w1_29_0 = 0xffffc5fd;
const bit<32> w1_29_1 = 0x0000c363;
const bit<32> w1_29_2 = 0x000046c4;
const bit<32> w1_29_3 = 0xffff84ef;
const bit<32> w1_29_4 = 0xffff3a5d;
const bit<32> w1_29_5 = 0xffff8418;
const bit<32> w1_29_6 = 0x00006005;
const bit<32> w1_29_7 = 0xffff2cd9;
const bit<32> w1_29_8 = 0x0000dd79;
const bit<32> w1_29_9 = 0x00003ebe;
const bit<32> w1_29_10 = 0x0000f358;
const bit<32> w1_29_11 = 0xffff037d;
const bit<32> w1_29_12 = 0xffffbb3e;
const bit<32> w1_29_13 = 0xffffd720;
const bit<32> w1_29_14 = 0xffff43ee;
const bit<32> w1_29_15 = 0x00002273;
const bit<32> w1_29_16 = 0x00002d22;
const bit<32> w1_29_17 = 0xffff504c;
const bit<32> w1_29_18 = 0xffff6446;
const bit<32> w1_29_19 = 0x000080f0;
const bit<32> w1_29_20 = 0x00005cf1;
const bit<32> w1_29_21 = 0xffff8e2b;
const bit<32> w1_29_22 = 0xffff07b1;
const bit<32> w1_29_23 = 0xffff1f6d;
const bit<32> w1_29_24 = 0xffffe6a9;
const bit<32> w1_29_25 = 0x00002478;
const bit<32> w1_29_26 = 0xffff27e3;
const bit<32> w1_29_27 = 0x000035d8;
const bit<32> w1_29_28 = 0xffffec4f;
const bit<32> w1_29_29 = 0x0000a8c5;
const bit<32> w1_29_30 = 0x000066ce;
const bit<32> w1_29_31 = 0xffff4b85;
const bit<32> w1_30_0 = 0x00005178;
const bit<32> w1_30_1 = 0xffffcc8d;
const bit<32> w1_30_2 = 0xffff6682;
const bit<32> w1_30_3 = 0x00009fd8;
const bit<32> w1_30_4 = 0xffffb720;
const bit<32> w1_30_5 = 0xffffce1b;
const bit<32> w1_30_6 = 0xffff86ab;
const bit<32> w1_30_7 = 0x00006d41;
const bit<32> w1_30_8 = 0xffff23c6;
const bit<32> w1_30_9 = 0x0000fc04;
const bit<32> w1_30_10 = 0x0000f2d0;
const bit<32> w1_30_11 = 0x0000e2e5;
const bit<32> w1_30_12 = 0x0000b7cc;
const bit<32> w1_30_13 = 0x00007b23;
const bit<32> w1_30_14 = 0xffff8860;
const bit<32> w1_30_15 = 0x00006221;
const bit<32> w1_30_16 = 0x00005719;
const bit<32> w1_30_17 = 0x00000398;
const bit<32> w1_30_18 = 0x00001efe;
const bit<32> w1_30_19 = 0xffff2c71;
const bit<32> w1_30_20 = 0xffff5bd0;
const bit<32> w1_30_21 = 0x0000e841;
const bit<32> w1_30_22 = 0x00002d6a;
const bit<32> w1_30_23 = 0xffff475b;
const bit<32> w1_30_24 = 0x00008b74;
const bit<32> w1_30_25 = 0x00009ca8;
const bit<32> w1_30_26 = 0x00006752;
const bit<32> w1_30_27 = 0x0000dbdb;
const bit<32> w1_30_28 = 0xffffed82;
const bit<32> w1_30_29 = 0x00008aee;
const bit<32> w1_30_30 = 0x0000767e;
const bit<32> w1_30_31 = 0xffff8d19;
const bit<32> w1_31_0 = 0xffffc735;
const bit<32> w1_31_1 = 0x000036c7;
const bit<32> w1_31_2 = 0xfffff372;
const bit<32> w1_31_3 = 0xffffd566;
const bit<32> w1_31_4 = 0xffff7128;
const bit<32> w1_31_5 = 0xffff6a02;
const bit<32> w1_31_6 = 0xffffff7b;
const bit<32> w1_31_7 = 0xffff898f;
const bit<32> w1_31_8 = 0xffffe33d;
const bit<32> w1_31_9 = 0xffffd922;
const bit<32> w1_31_10 = 0xffff425d;
const bit<32> w1_31_11 = 0x0000559e;
const bit<32> w1_31_12 = 0xfffff9e6;
const bit<32> w1_31_13 = 0xffff3637;
const bit<32> w1_31_14 = 0xffff9601;
const bit<32> w1_31_15 = 0xffffc148;
const bit<32> w1_31_16 = 0xfffff1a3;
const bit<32> w1_31_17 = 0xffff16bc;
const bit<32> w1_31_18 = 0xffff5830;
const bit<32> w1_31_19 = 0xffffea4d;
const bit<32> w1_31_20 = 0xffffb4ff;
const bit<32> w1_31_21 = 0x0000552a;
const bit<32> w1_31_22 = 0xffff834d;
const bit<32> w1_31_23 = 0x00004be3;
const bit<32> w1_31_24 = 0xffffa2fa;
const bit<32> w1_31_25 = 0x0000438f;
const bit<32> w1_31_26 = 0x0000f796;
const bit<32> w1_31_27 = 0xffff7b5f;
const bit<32> w1_31_28 = 0x00002a3d;
const bit<32> w1_31_29 = 0xffffea57;
const bit<32> w1_31_30 = 0x0000fb15;
const bit<32> w1_31_31 = 0x0000cbd8;
const bit<32> w1_32_0 = 0x000054b6;
const bit<32> w1_32_1 = 0x0000ecf8;
const bit<32> w1_32_2 = 0xffffdb97;
const bit<32> w1_32_3 = 0xffff3a5e;
const bit<32> w1_32_4 = 0xffff5836;
const bit<32> w1_32_5 = 0x0000dce9;
const bit<32> w1_32_6 = 0x00008eac;
const bit<32> w1_32_7 = 0x00005288;
const bit<32> w1_32_8 = 0x00006d7c;
const bit<32> w1_32_9 = 0xffff4823;
const bit<32> w1_32_10 = 0x00009c6d;
const bit<32> w1_32_11 = 0xffffdd9d;
const bit<32> w1_32_12 = 0x0000ba96;
const bit<32> w1_32_13 = 0x00009f45;
const bit<32> w1_32_14 = 0x00000626;
const bit<32> w1_32_15 = 0x000037b9;
const bit<32> w1_32_16 = 0xffff1256;
const bit<32> w1_32_17 = 0xffff7391;
const bit<32> w1_32_18 = 0xffffa02d;
const bit<32> w1_32_19 = 0xffff71bd;
const bit<32> w1_32_20 = 0xffff265d;
const bit<32> w1_32_21 = 0x0000f57b;
const bit<32> w1_32_22 = 0x00004025;
const bit<32> w1_32_23 = 0x0000ab8c;
const bit<32> w1_32_24 = 0x0000ecfe;
const bit<32> w1_32_25 = 0x00001037;
const bit<32> w1_32_26 = 0xffff28dd;
const bit<32> w1_32_27 = 0xffff8cab;
const bit<32> w1_32_28 = 0xffffa165;
const bit<32> w1_32_29 = 0xffff72b9;
const bit<32> w1_32_30 = 0x00001cc0;
const bit<32> w1_32_31 = 0x00003b71;
const bit<32> w1_33_0 = 0x000032e8;
const bit<32> w1_33_1 = 0xffff1a5e;
const bit<32> w1_33_2 = 0xffffdcd5;
const bit<32> w1_33_3 = 0xffff73e7;
const bit<32> w1_33_4 = 0xffff3077;
const bit<32> w1_33_5 = 0x000003c1;
const bit<32> w1_33_6 = 0x00005083;
const bit<32> w1_33_7 = 0x00007b69;
const bit<32> w1_33_8 = 0x00002cc3;
const bit<32> w1_33_9 = 0xffff7d61;
const bit<32> w1_33_10 = 0xffff8c5f;
const bit<32> w1_33_11 = 0x0000630f;
const bit<32> w1_33_12 = 0x00007ff9;
const bit<32> w1_33_13 = 0x00009b0f;
const bit<32> w1_33_14 = 0x0000e8e3;
const bit<32> w1_33_15 = 0xffffc0ef;
const bit<32> w1_33_16 = 0x0000bddf;
const bit<32> w1_33_17 = 0x00005582;
const bit<32> w1_33_18 = 0xffffa24d;
const bit<32> w1_33_19 = 0xffff8b0b;
const bit<32> w1_33_20 = 0xfffffe43;
const bit<32> w1_33_21 = 0xffffd9f7;
const bit<32> w1_33_22 = 0x0000f38c;
const bit<32> w1_33_23 = 0x0000697a;
const bit<32> w1_33_24 = 0xffff0766;
const bit<32> w1_33_25 = 0xffffe1cc;
const bit<32> w1_33_26 = 0xffffedad;
const bit<32> w1_33_27 = 0xffff215e;
const bit<32> w1_33_28 = 0x0000370d;
const bit<32> w1_33_29 = 0xfffffdaf;
const bit<32> w1_33_30 = 0xffffe3a6;
const bit<32> w1_33_31 = 0x0000bb4c;
const bit<32> w1_34_0 = 0xfffff8aa;
const bit<32> w1_34_1 = 0x00001333;
const bit<32> w1_34_2 = 0x0000f2f8;
const bit<32> w1_34_3 = 0xffffeece;
const bit<32> w1_34_4 = 0xfffff557;
const bit<32> w1_34_5 = 0xffff5b1e;
const bit<32> w1_34_6 = 0xffffe6d1;
const bit<32> w1_34_7 = 0x0000868e;
const bit<32> w1_34_8 = 0x00000057;
const bit<32> w1_34_9 = 0xffffa126;
const bit<32> w1_34_10 = 0xffff480e;
const bit<32> w1_34_11 = 0x00001025;
const bit<32> w1_34_12 = 0x0000f545;
const bit<32> w1_34_13 = 0xffff1bdd;
const bit<32> w1_34_14 = 0xffff488c;
const bit<32> w1_34_15 = 0xffffee50;
const bit<32> w1_34_16 = 0xffffb410;
const bit<32> w1_34_17 = 0x00004679;
const bit<32> w1_34_18 = 0xffff3529;
const bit<32> w1_34_19 = 0x0000ecae;
const bit<32> w1_34_20 = 0x000053e5;
const bit<32> w1_34_21 = 0x0000a69e;
const bit<32> w1_34_22 = 0x00001756;
const bit<32> w1_34_23 = 0xffff3bcb;
const bit<32> w1_34_24 = 0xffff02a7;
const bit<32> w1_34_25 = 0xffffeeaa;
const bit<32> w1_34_26 = 0xffff4f2d;
const bit<32> w1_34_27 = 0x00007333;
const bit<32> w1_34_28 = 0x00005874;
const bit<32> w1_34_29 = 0xffffef8e;
const bit<32> w1_34_30 = 0xffff7089;
const bit<32> w1_34_31 = 0xffffac13;
const bit<32> w1_35_0 = 0xffff6a0c;
const bit<32> w1_35_1 = 0x0000ed87;
const bit<32> w1_35_2 = 0xffffd433;
const bit<32> w1_35_3 = 0xffff46d7;
const bit<32> w1_35_4 = 0x000087da;
const bit<32> w1_35_5 = 0x0000c19f;
const bit<32> w1_35_6 = 0x000066b5;
const bit<32> w1_35_7 = 0x0000678b;
const bit<32> w1_35_8 = 0xffff25c5;
const bit<32> w1_35_9 = 0x0000ab80;
const bit<32> w1_35_10 = 0xffffe8fa;
const bit<32> w1_35_11 = 0xffff149c;
const bit<32> w1_35_12 = 0xffff98c6;
const bit<32> w1_35_13 = 0xffffe548;
const bit<32> w1_35_14 = 0xffffbd9d;
const bit<32> w1_35_15 = 0x00006bac;
const bit<32> w1_35_16 = 0xffffc09e;
const bit<32> w1_35_17 = 0xffff1f87;
const bit<32> w1_35_18 = 0x000005ae;
const bit<32> w1_35_19 = 0xffff91bf;
const bit<32> w1_35_20 = 0xffff1ca5;
const bit<32> w1_35_21 = 0xffff2449;
const bit<32> w1_35_22 = 0x0000a127;
const bit<32> w1_35_23 = 0x000007fc;
const bit<32> w1_35_24 = 0x00001740;
const bit<32> w1_35_25 = 0xffff59db;
const bit<32> w1_35_26 = 0x0000f57f;
const bit<32> w1_35_27 = 0xffff01ee;
const bit<32> w1_35_28 = 0x000080a0;
const bit<32> w1_35_29 = 0x000060de;
const bit<32> w1_35_30 = 0x00001961;
const bit<32> w1_35_31 = 0x00004e0c;
const bit<32> w1_36_0 = 0x00006fe5;
const bit<32> w1_36_1 = 0x000054f8;
const bit<32> w1_36_2 = 0xffff9282;
const bit<32> w1_36_3 = 0x00003ffc;
const bit<32> w1_36_4 = 0x0000e30d;
const bit<32> w1_36_5 = 0x0000ce3b;
const bit<32> w1_36_6 = 0xffffff51;
const bit<32> w1_36_7 = 0xffff9244;
const bit<32> w1_36_8 = 0xffffa169;
const bit<32> w1_36_9 = 0xffffd080;
const bit<32> w1_36_10 = 0xffff73c1;
const bit<32> w1_36_11 = 0x0000e5ce;
const bit<32> w1_36_12 = 0xffffd432;
const bit<32> w1_36_13 = 0xffffa234;
const bit<32> w1_36_14 = 0x00009601;
const bit<32> w1_36_15 = 0x00007154;
const bit<32> w1_36_16 = 0xffff6d57;
const bit<32> w1_36_17 = 0xffff4a48;
const bit<32> w1_36_18 = 0x00003d4c;
const bit<32> w1_36_19 = 0x00004802;
const bit<32> w1_36_20 = 0x00000c29;
const bit<32> w1_36_21 = 0xffff6342;
const bit<32> w1_36_22 = 0xffffcd61;
const bit<32> w1_36_23 = 0xffff07da;
const bit<32> w1_36_24 = 0xffff91c0;
const bit<32> w1_36_25 = 0x00000955;
const bit<32> w1_36_26 = 0x0000954e;
const bit<32> w1_36_27 = 0xffffb083;
const bit<32> w1_36_28 = 0xffff74ff;
const bit<32> w1_36_29 = 0x0000af86;
const bit<32> w1_36_30 = 0x0000ebf7;
const bit<32> w1_36_31 = 0xffff7a67;
const bit<32> w1_37_0 = 0xffff40fa;
const bit<32> w1_37_1 = 0xffffc461;
const bit<32> w1_37_2 = 0xffff4610;
const bit<32> w1_37_3 = 0xffff26f6;
const bit<32> w1_37_4 = 0x00009591;
const bit<32> w1_37_5 = 0xffffbda3;
const bit<32> w1_37_6 = 0xffff0538;
const bit<32> w1_37_7 = 0x00004978;
const bit<32> w1_37_8 = 0x0000074a;
const bit<32> w1_37_9 = 0xffff33b5;
const bit<32> w1_37_10 = 0xfffff337;
const bit<32> w1_37_11 = 0x0000107f;
const bit<32> w1_37_12 = 0xffff58cd;
const bit<32> w1_37_13 = 0x000099b3;
const bit<32> w1_37_14 = 0x00005db4;
const bit<32> w1_37_15 = 0xffffcf5e;
const bit<32> w1_37_16 = 0xffff8906;
const bit<32> w1_37_17 = 0x0000b0ec;
const bit<32> w1_37_18 = 0xffff69d1;
const bit<32> w1_37_19 = 0x00006575;
const bit<32> w1_37_20 = 0x00002536;
const bit<32> w1_37_21 = 0x00006c1d;
const bit<32> w1_37_22 = 0xfffff34e;
const bit<32> w1_37_23 = 0xffffa4e4;
const bit<32> w1_37_24 = 0xffffb664;
const bit<32> w1_37_25 = 0xffffdf65;
const bit<32> w1_37_26 = 0xffff5b36;
const bit<32> w1_37_27 = 0xffff6391;
const bit<32> w1_37_28 = 0x0000d56a;
const bit<32> w1_37_29 = 0xffffc81c;
const bit<32> w1_37_30 = 0x0000cef9;
const bit<32> w1_37_31 = 0xffff59a4;
const bit<32> w1_38_0 = 0xfffff414;
const bit<32> w1_38_1 = 0xffff8375;
const bit<32> w1_38_2 = 0xffffc7bb;
const bit<32> w1_38_3 = 0x0000809c;
const bit<32> w1_38_4 = 0x00001aeb;
const bit<32> w1_38_5 = 0x00004924;
const bit<32> w1_38_6 = 0x0000e207;
const bit<32> w1_38_7 = 0xffff015b;
const bit<32> w1_38_8 = 0xffff844e;
const bit<32> w1_38_9 = 0x0000e6f1;
const bit<32> w1_38_10 = 0x000093d0;
const bit<32> w1_38_11 = 0xffffb1e5;
const bit<32> w1_38_12 = 0xffff06e1;
const bit<32> w1_38_13 = 0x0000067e;
const bit<32> w1_38_14 = 0x0000f8da;
const bit<32> w1_38_15 = 0xffff0538;
const bit<32> w1_38_16 = 0x00008a66;
const bit<32> w1_38_17 = 0xffff2dd2;
const bit<32> w1_38_18 = 0xffff0c28;
const bit<32> w1_38_19 = 0x0000c723;
const bit<32> w1_38_20 = 0xfffff08e;
const bit<32> w1_38_21 = 0x0000579c;
const bit<32> w1_38_22 = 0xfffffa9f;
const bit<32> w1_38_23 = 0x0000013a;
const bit<32> w1_38_24 = 0xffff4a03;
const bit<32> w1_38_25 = 0x00002a49;
const bit<32> w1_38_26 = 0xffff2a52;
const bit<32> w1_38_27 = 0xffff52cf;
const bit<32> w1_38_28 = 0x0000fad8;
const bit<32> w1_38_29 = 0x0000d1d5;
const bit<32> w1_38_30 = 0xffffe2b4;
const bit<32> w1_38_31 = 0x00000496;
const bit<32> w1_39_0 = 0x00005d55;
const bit<32> w1_39_1 = 0xffffd932;
const bit<32> w1_39_2 = 0xffff16c8;
const bit<32> w1_39_3 = 0x00005c26;
const bit<32> w1_39_4 = 0x0000cb87;
const bit<32> w1_39_5 = 0x00005e38;
const bit<32> w1_39_6 = 0x00001747;
const bit<32> w1_39_7 = 0x0000f454;
const bit<32> w1_39_8 = 0x000015d1;
const bit<32> w1_39_9 = 0x00004aba;
const bit<32> w1_39_10 = 0x00009633;
const bit<32> w1_39_11 = 0x00006456;
const bit<32> w1_39_12 = 0x0000b923;
const bit<32> w1_39_13 = 0xffffca00;
const bit<32> w1_39_14 = 0xffff5e08;
const bit<32> w1_39_15 = 0xffff0a81;
const bit<32> w1_39_16 = 0x0000740e;
const bit<32> w1_39_17 = 0x0000644a;
const bit<32> w1_39_18 = 0x0000d86e;
const bit<32> w1_39_19 = 0xffff9ef3;
const bit<32> w1_39_20 = 0x000037b3;
const bit<32> w1_39_21 = 0x00007ef4;
const bit<32> w1_39_22 = 0x00009187;
const bit<32> w1_39_23 = 0xffff3aee;
const bit<32> w1_39_24 = 0x0000fc9a;
const bit<32> w1_39_25 = 0x0000c3ff;
const bit<32> w1_39_26 = 0xffff1949;
const bit<32> w1_39_27 = 0xffff37b5;
const bit<32> w1_39_28 = 0xffffd21b;
const bit<32> w1_39_29 = 0x00007fb7;
const bit<32> w1_39_30 = 0xffff5567;
const bit<32> w1_39_31 = 0xffff092d;
const bit<32> w1_40_0 = 0x00005af0;
const bit<32> w1_40_1 = 0x000046b9;
const bit<32> w1_40_2 = 0x00005c86;
const bit<32> w1_40_3 = 0x000061ef;
const bit<32> w1_40_4 = 0xffff01a8;
const bit<32> w1_40_5 = 0x00006e04;
const bit<32> w1_40_6 = 0xffff19d4;
const bit<32> w1_40_7 = 0x0000e503;
const bit<32> w1_40_8 = 0xffffcff5;
const bit<32> w1_40_9 = 0x000005da;
const bit<32> w1_40_10 = 0x0000cfdd;
const bit<32> w1_40_11 = 0xffff7f05;
const bit<32> w1_40_12 = 0x00003166;
const bit<32> w1_40_13 = 0xffff5840;
const bit<32> w1_40_14 = 0x00009d7d;
const bit<32> w1_40_15 = 0x0000af4f;
const bit<32> w1_40_16 = 0x000052c8;
const bit<32> w1_40_17 = 0xffff6742;
const bit<32> w1_40_18 = 0x00006639;
const bit<32> w1_40_19 = 0xffff34b7;
const bit<32> w1_40_20 = 0x000031aa;
const bit<32> w1_40_21 = 0xffff3c41;
const bit<32> w1_40_22 = 0x0000332e;
const bit<32> w1_40_23 = 0x0000f265;
const bit<32> w1_40_24 = 0x00009946;
const bit<32> w1_40_25 = 0x00009c2d;
const bit<32> w1_40_26 = 0xffffc9cc;
const bit<32> w1_40_27 = 0x0000dd41;
const bit<32> w1_40_28 = 0xffff257f;
const bit<32> w1_40_29 = 0xffff266c;
const bit<32> w1_40_30 = 0xffffeea6;
const bit<32> w1_40_31 = 0xffffa4d7;
const bit<32> w1_41_0 = 0xffff3322;
const bit<32> w1_41_1 = 0xffff2c13;
const bit<32> w1_41_2 = 0xffff0874;
const bit<32> w1_41_3 = 0x00006e52;
const bit<32> w1_41_4 = 0xffffc7df;
const bit<32> w1_41_5 = 0xffff2edb;
const bit<32> w1_41_6 = 0xfffff636;
const bit<32> w1_41_7 = 0xffff0585;
const bit<32> w1_41_8 = 0x000024fc;
const bit<32> w1_41_9 = 0x00008fb4;
const bit<32> w1_41_10 = 0x0000a3a9;
const bit<32> w1_41_11 = 0xffff77ba;
const bit<32> w1_41_12 = 0xffff0ec5;
const bit<32> w1_41_13 = 0x00004f83;
const bit<32> w1_41_14 = 0xffffcfa7;
const bit<32> w1_41_15 = 0x00006321;
const bit<32> w1_41_16 = 0x0000186f;
const bit<32> w1_41_17 = 0xffff18d6;
const bit<32> w1_41_18 = 0xffff607f;
const bit<32> w1_41_19 = 0xffffa0fc;
const bit<32> w1_41_20 = 0xffff07b1;
const bit<32> w1_41_21 = 0x0000b306;
const bit<32> w1_41_22 = 0xffff9a6c;
const bit<32> w1_41_23 = 0xffff938c;
const bit<32> w1_41_24 = 0x00005a87;
const bit<32> w1_41_25 = 0xffffa92f;
const bit<32> w1_41_26 = 0xffff7d5c;
const bit<32> w1_41_27 = 0xfffff713;
const bit<32> w1_41_28 = 0x00001d30;
const bit<32> w1_41_29 = 0x0000561c;
const bit<32> w1_41_30 = 0x0000b540;
const bit<32> w1_41_31 = 0x0000323b;
const bit<32> w1_42_0 = 0xffff1eda;
const bit<32> w1_42_1 = 0xffffeb59;
const bit<32> w1_42_2 = 0x00005ea5;
const bit<32> w1_42_3 = 0x0000336f;
const bit<32> w1_42_4 = 0xffff8a5b;
const bit<32> w1_42_5 = 0x000066e6;
const bit<32> w1_42_6 = 0x00009593;
const bit<32> w1_42_7 = 0xffffac3b;
const bit<32> w1_42_8 = 0x00004505;
const bit<32> w1_42_9 = 0x0000e72f;
const bit<32> w1_42_10 = 0x00008437;
const bit<32> w1_42_11 = 0xffff95b9;
const bit<32> w1_42_12 = 0xffff6987;
const bit<32> w1_42_13 = 0x000097d5;
const bit<32> w1_42_14 = 0xffffac7f;
const bit<32> w1_42_15 = 0x000031ef;
const bit<32> w1_42_16 = 0x00000e11;
const bit<32> w1_42_17 = 0x000055c2;
const bit<32> w1_42_18 = 0xffff4105;
const bit<32> w1_42_19 = 0x00001f6a;
const bit<32> w1_42_20 = 0x00001bbf;
const bit<32> w1_42_21 = 0xffff2aa0;
const bit<32> w1_42_22 = 0xffff4666;
const bit<32> w1_42_23 = 0xffffbe74;
const bit<32> w1_42_24 = 0xffff3a87;
const bit<32> w1_42_25 = 0x0000884c;
const bit<32> w1_42_26 = 0xffff37d9;
const bit<32> w1_42_27 = 0xffff5537;
const bit<32> w1_42_28 = 0xffff0d54;
const bit<32> w1_42_29 = 0xffff961b;
const bit<32> w1_42_30 = 0xfffff1f7;
const bit<32> w1_42_31 = 0x0000bef0;
const bit<32> w1_43_0 = 0x0000ba7a;
const bit<32> w1_43_1 = 0xffffcb34;
const bit<32> w1_43_2 = 0x00004ad6;
const bit<32> w1_43_3 = 0x0000d66f;
const bit<32> w1_43_4 = 0xffffd95c;
const bit<32> w1_43_5 = 0x00003064;
const bit<32> w1_43_6 = 0x0000500c;
const bit<32> w1_43_7 = 0x00008f08;
const bit<32> w1_43_8 = 0x000044fe;
const bit<32> w1_43_9 = 0x0000af6e;
const bit<32> w1_43_10 = 0xffff2cae;
const bit<32> w1_43_11 = 0xffffa928;
const bit<32> w1_43_12 = 0xffff90c1;
const bit<32> w1_43_13 = 0xffff7a37;
const bit<32> w1_43_14 = 0x0000f834;
const bit<32> w1_43_15 = 0xffff12ae;
const bit<32> w1_43_16 = 0x000070d5;
const bit<32> w1_43_17 = 0xffff2240;
const bit<32> w1_43_18 = 0xffffd455;
const bit<32> w1_43_19 = 0xffffc942;
const bit<32> w1_43_20 = 0xffff4a7c;
const bit<32> w1_43_21 = 0xffff2f86;
const bit<32> w1_43_22 = 0xffffd0ff;
const bit<32> w1_43_23 = 0x0000f80b;
const bit<32> w1_43_24 = 0xffffd5f4;
const bit<32> w1_43_25 = 0x00007f83;
const bit<32> w1_43_26 = 0xffffdb2c;
const bit<32> w1_43_27 = 0x00003cc8;
const bit<32> w1_43_28 = 0x00002b94;
const bit<32> w1_43_29 = 0x000028bc;
const bit<32> w1_43_30 = 0xffff1b69;
const bit<32> w1_43_31 = 0x000047d7;
const bit<32> w1_44_0 = 0xffff0bbe;
const bit<32> w1_44_1 = 0xffffa7cb;
const bit<32> w1_44_2 = 0xffffcf65;
const bit<32> w1_44_3 = 0x00002d54;
const bit<32> w1_44_4 = 0xffff0818;
const bit<32> w1_44_5 = 0x0000eca8;
const bit<32> w1_44_6 = 0xffff3c41;
const bit<32> w1_44_7 = 0x0000642a;
const bit<32> w1_44_8 = 0x00004132;
const bit<32> w1_44_9 = 0x000031a0;
const bit<32> w1_44_10 = 0xffff1fbc;
const bit<32> w1_44_11 = 0xffff7f2d;
const bit<32> w1_44_12 = 0x0000aff5;
const bit<32> w1_44_13 = 0xffff6c0f;
const bit<32> w1_44_14 = 0x0000cdff;
const bit<32> w1_44_15 = 0xffff0abb;
const bit<32> w1_44_16 = 0x00008345;
const bit<32> w1_44_17 = 0xfffff630;
const bit<32> w1_44_18 = 0xffffc5bc;
const bit<32> w1_44_19 = 0xffff7adb;
const bit<32> w1_44_20 = 0x00006808;
const bit<32> w1_44_21 = 0x0000b744;
const bit<32> w1_44_22 = 0xffff1a4f;
const bit<32> w1_44_23 = 0xffff7c2d;
const bit<32> w1_44_24 = 0x0000a3a5;
const bit<32> w1_44_25 = 0xffffb044;
const bit<32> w1_44_26 = 0x000001e0;
const bit<32> w1_44_27 = 0xffff02d0;
const bit<32> w1_44_28 = 0x0000a839;
const bit<32> w1_44_29 = 0xffff1596;
const bit<32> w1_44_30 = 0xffff5261;
const bit<32> w1_44_31 = 0xffff11fe;
const bit<32> w1_45_0 = 0x00009aa6;
const bit<32> w1_45_1 = 0x00002465;
const bit<32> w1_45_2 = 0xffff3f81;
const bit<32> w1_45_3 = 0xffff3e77;
const bit<32> w1_45_4 = 0xffff01bb;
const bit<32> w1_45_5 = 0xffff038f;
const bit<32> w1_45_6 = 0xffff2bab;
const bit<32> w1_45_7 = 0xffffc78f;
const bit<32> w1_45_8 = 0x0000c21d;
const bit<32> w1_45_9 = 0xffff9bb9;
const bit<32> w1_45_10 = 0xffff199c;
const bit<32> w1_45_11 = 0x0000e54b;
const bit<32> w1_45_12 = 0xffff4b1d;
const bit<32> w1_45_13 = 0x000024d7;
const bit<32> w1_45_14 = 0x00003c83;
const bit<32> w1_45_15 = 0xffff1603;
const bit<32> w1_45_16 = 0x0000108e;
const bit<32> w1_45_17 = 0xffffafbd;
const bit<32> w1_45_18 = 0x0000ae93;
const bit<32> w1_45_19 = 0xffff2d73;
const bit<32> w1_45_20 = 0xffff264d;
const bit<32> w1_45_21 = 0xffff1183;
const bit<32> w1_45_22 = 0x000041a2;
const bit<32> w1_45_23 = 0x00004be0;
const bit<32> w1_45_24 = 0x0000a93e;
const bit<32> w1_45_25 = 0xffff73d8;
const bit<32> w1_45_26 = 0x0000ef81;
const bit<32> w1_45_27 = 0xffff74a7;
const bit<32> w1_45_28 = 0x0000f296;
const bit<32> w1_45_29 = 0x00002fbf;
const bit<32> w1_45_30 = 0x00005182;
const bit<32> w1_45_31 = 0xffff13b3;
const bit<32> w1_46_0 = 0x00007b71;
const bit<32> w1_46_1 = 0x00000120;
const bit<32> w1_46_2 = 0xffffd6ca;
const bit<32> w1_46_3 = 0xffffb5f2;
const bit<32> w1_46_4 = 0x0000f308;
const bit<32> w1_46_5 = 0x000032b9;
const bit<32> w1_46_6 = 0x0000c68f;
const bit<32> w1_46_7 = 0x00005fe4;
const bit<32> w1_46_8 = 0x0000c51b;
const bit<32> w1_46_9 = 0x0000b1b4;
const bit<32> w1_46_10 = 0xffff8f82;
const bit<32> w1_46_11 = 0xffffde75;
const bit<32> w1_46_12 = 0x0000ed82;
const bit<32> w1_46_13 = 0xffff27cd;
const bit<32> w1_46_14 = 0x00005280;
const bit<32> w1_46_15 = 0xffff99e6;
const bit<32> w1_46_16 = 0xffff87f2;
const bit<32> w1_46_17 = 0x00002f65;
const bit<32> w1_46_18 = 0x00005654;
const bit<32> w1_46_19 = 0xffff7482;
const bit<32> w1_46_20 = 0x00007688;
const bit<32> w1_46_21 = 0x00005257;
const bit<32> w1_46_22 = 0xffff70a2;
const bit<32> w1_46_23 = 0x0000f291;
const bit<32> w1_46_24 = 0xffff62ab;
const bit<32> w1_46_25 = 0x0000778b;
const bit<32> w1_46_26 = 0xffff35d3;
const bit<32> w1_46_27 = 0x00006230;
const bit<32> w1_46_28 = 0xffffc236;
const bit<32> w1_46_29 = 0xffff600f;
const bit<32> w1_46_30 = 0x0000b422;
const bit<32> w1_46_31 = 0x000084ad;
const bit<32> w1_47_0 = 0xffff609f;
const bit<32> w1_47_1 = 0x00003d39;
const bit<32> w1_47_2 = 0xffff439d;
const bit<32> w1_47_3 = 0xffff3fce;
const bit<32> w1_47_4 = 0x000026c4;
const bit<32> w1_47_5 = 0x00001703;
const bit<32> w1_47_6 = 0x00008952;
const bit<32> w1_47_7 = 0xffff7c26;
const bit<32> w1_47_8 = 0xffff1451;
const bit<32> w1_47_9 = 0x00005b71;
const bit<32> w1_47_10 = 0x000043b3;
const bit<32> w1_47_11 = 0xffffdeb5;
const bit<32> w1_47_12 = 0x0000b17c;
const bit<32> w1_47_13 = 0x0000156b;
const bit<32> w1_47_14 = 0x0000a485;
const bit<32> w1_47_15 = 0xfffffc60;
const bit<32> w1_47_16 = 0xffff0447;
const bit<32> w1_47_17 = 0x0000dd2d;
const bit<32> w1_47_18 = 0x0000984c;
const bit<32> w1_47_19 = 0x0000d6fa;
const bit<32> w1_47_20 = 0xffff7d0b;
const bit<32> w1_47_21 = 0xffff775a;
const bit<32> w1_47_22 = 0xffff4d10;
const bit<32> w1_47_23 = 0x00005c0e;
const bit<32> w1_47_24 = 0xffff11a0;
const bit<32> w1_47_25 = 0xffff5600;
const bit<32> w1_47_26 = 0xffff782f;
const bit<32> w1_47_27 = 0x0000388d;
const bit<32> w1_47_28 = 0xffff5d04;
const bit<32> w1_47_29 = 0xffff1bcf;
const bit<32> w1_47_30 = 0x0000b7dc;
const bit<32> w1_47_31 = 0xffff6fc8;

const bit<16> b1_0 = 0x2440;
const bit<16> b1_1 = 0xc7bf;
const bit<16> b1_2 = 0xd9fb;
const bit<16> b1_3 = 0x28f3;
const bit<16> b1_4 = 0x2eca;
const bit<16> b1_5 = 0x87bc;
const bit<16> b1_6 = 0x5966;
const bit<16> b1_7 = 0x4a90;
const bit<16> b1_8 = 0x50b3;
const bit<16> b1_9 = 0xe863;
const bit<16> b1_10 = 0x0e8c;
const bit<16> b1_11 = 0x01db;
const bit<16> b1_12 = 0x7bbb;
const bit<16> b1_13 = 0x02d9;
const bit<16> b1_14 = 0x6073;
const bit<16> b1_15 = 0x3ebb;
const bit<16> b1_16 = 0x0018;
const bit<16> b1_17 = 0xabc1;
const bit<16> b1_18 = 0xd2b6;
const bit<16> b1_19 = 0x2c1e;
const bit<16> b1_20 = 0xfd87;
const bit<16> b1_21 = 0x63c2;
const bit<16> b1_22 = 0x0e23;
const bit<16> b1_23 = 0x4d08;
const bit<16> b1_24 = 0x8d37;
const bit<16> b1_25 = 0xa9a4;
const bit<16> b1_26 = 0xa302;
const bit<16> b1_27 = 0xd62b;
const bit<16> b1_28 = 0xa3c0;
const bit<16> b1_29 = 0xf607;
const bit<16> b1_30 = 0x306b;
const bit<16> b1_31 = 0xac40;

const bit<32> w2_0_0 = 0x00006543;
const bit<32> w2_1_0 = 0xffff1ba2;
const bit<32> w2_2_0 = 0xffff8b73;
const bit<32> w2_3_0 = 0x0000b2d5;
const bit<32> w2_4_0 = 0x00000053;
const bit<32> w2_5_0 = 0xffff0c5a;
const bit<32> w2_6_0 = 0x0000396b;
const bit<32> w2_7_0 = 0x000006f4;
const bit<32> w2_8_0 = 0xffff9a8e;
const bit<32> w2_9_0 = 0xffff6336;
const bit<32> w2_10_0 = 0xffffba15;
const bit<32> w2_11_0 = 0x000072bc;
const bit<32> w2_12_0 = 0xffff7b67;
const bit<32> w2_13_0 = 0x0000d9e4;
const bit<32> w2_14_0 = 0xffff1835;
const bit<32> w2_15_0 = 0x0000b90b;
const bit<32> w2_16_0 = 0x000051f8;
const bit<32> w2_17_0 = 0xffffde4b;
const bit<32> w2_18_0 = 0x00002432;
const bit<32> w2_19_0 = 0xffffa663;
const bit<32> w2_20_0 = 0xffff3e16;
const bit<32> w2_21_0 = 0x00008be8;
const bit<32> w2_22_0 = 0xffff8dfc;
const bit<32> w2_23_0 = 0xffff3731;
const bit<32> w2_24_0 = 0x00005d65;
const bit<32> w2_25_0 = 0x0000fd5b;
const bit<32> w2_26_0 = 0x0000c1a8;
const bit<32> w2_27_0 = 0x0000fe1e;
const bit<32> w2_28_0 = 0x0000cc4d;
const bit<32> w2_29_0 = 0x0000361b;
const bit<32> w2_30_0 = 0xffff49ae;
const bit<32> w2_31_0 = 0xffffb927;

const bit<16> b_reduce = 0xFEFD;

const bit<16> ETHERTYPE_PTP  = 0x88F7;

header ptp_t {
    bit<4>   transport_specifics;
    bit<4>   message_type;
    bit<4>   reserved1;
    bit<4>   version;
    bit<16>  message_legth;
    bit<8>   domain_number;
    bit<8>   reserved2;
    bit<16>  flagfiled;
    bit<64>  correction_field;
    bit<32>  reserved3;
    bit<80>  source_port_identity;
    bit<16>  sequence_id;
    bit<8>   control_field;
    bit<8>   log_message_interval;
}

header p4calc_t {
    bit<8> p;
    bit<8> four;
    bit<8> ver;
    // Input features(6 features)

    bit<32> s1_replication;
    bit<32> s4_replication;
    bit<32> msg_index;
}

header s0_output0_calc_t {
    bit<16> s0_output_0_0;
    bit<16> s0_output_0_1;
    bit<16> s0_output_0_2;
    bit<16> s0_output_0_3;
    bit<16> s0_output_0_4;
    bit<16> s0_output_0_5;
    bit<16> s0_output_1_0;
    bit<16> s0_output_1_1;
    bit<16> s0_output_1_2;
    bit<16> s0_output_1_3;
    bit<16> s0_output_1_4;
    bit<16> s0_output_1_5;
    bit<16> s0_output_2_0;
    bit<16> s0_output_2_1;
    bit<16> s0_output_2_2;
    bit<16> s0_output_2_3;
    bit<16> s0_output_2_4;
    bit<16> s0_output_2_5;
    bit<16> s0_output_3_0;
    bit<16> s0_output_3_1;
    bit<16> s0_output_3_2;
    bit<16> s0_output_3_3;
    bit<16> s0_output_3_4;
    bit<16> s0_output_3_5;
    bit<16> s0_output_4_0;
    bit<16> s0_output_4_1;
    bit<16> s0_output_4_2;
    bit<16> s0_output_4_3;
    bit<16> s0_output_4_4;
    bit<16> s0_output_4_5;
    bit<16> s0_output_5_0;
    bit<16> s0_output_5_1;
    bit<16> s0_output_5_2;
    bit<16> s0_output_5_3;
    bit<16> s0_output_5_4;
    bit<16> s0_output_5_5;
    bit<16> s0_output_6_0;
    bit<16> s0_output_6_1;
    bit<16> s0_output_6_2;
    bit<16> s0_output_6_3;
    bit<16> s0_output_6_4;
    bit<16> s0_output_6_5;
    bit<16> s0_output_7_0;
    bit<16> s0_output_7_1;
    bit<16> s0_output_7_2;
    bit<16> s0_output_7_3;
    bit<16> s0_output_7_4;
    bit<16> s0_output_7_5;
}

header s1_output0_calc_t {
    bit<16> s1_output_0_0;
    bit<16> s1_output_0_1;
    bit<16> s1_output_0_2;
    bit<16> s1_output_0_3;
    bit<16> s1_output_0_4;
    bit<16> s1_output_0_5;
    bit<16> s1_output_1_0;
    bit<16> s1_output_1_1;
    bit<16> s1_output_1_2;
    bit<16> s1_output_1_3;
    bit<16> s1_output_1_4;
    bit<16> s1_output_1_5;
    bit<16> s1_output_2_0;
    bit<16> s1_output_2_1;
    bit<16> s1_output_2_2;
    bit<16> s1_output_2_3;
    bit<16> s1_output_2_4;
    bit<16> s1_output_2_5;
    bit<16> s1_output_3_0;
    bit<16> s1_output_3_1;
    bit<16> s1_output_3_2;
    bit<16> s1_output_3_3;
    bit<16> s1_output_3_4;
    bit<16> s1_output_3_5;
    bit<16> s1_output_4_0;
    bit<16> s1_output_4_1;
    bit<16> s1_output_4_2;
    bit<16> s1_output_4_3;
    bit<16> s1_output_4_4;
    bit<16> s1_output_4_5;
    bit<16> s1_output_5_0;
    bit<16> s1_output_5_1;
    bit<16> s1_output_5_2;
    bit<16> s1_output_5_3;
    bit<16> s1_output_5_4;
    bit<16> s1_output_5_5;
    bit<16> s1_output_6_0;
    bit<16> s1_output_6_1;
    bit<16> s1_output_6_2;
    bit<16> s1_output_6_3;
    bit<16> s1_output_6_4;
    bit<16> s1_output_6_5;
    bit<16> s1_output_7_0;
    bit<16> s1_output_7_1;
    bit<16> s1_output_7_2;
    bit<16> s1_output_7_3;
    bit<16> s1_output_7_4;
    bit<16> s1_output_7_5;
}

header s7_output0_calc_t {
    bit<16> s7_before_sigmoid;
    bit<16> s7_output;
}

struct headers {
    ethernet_t   ethernet;
    ptp_t       ptp;
    p4calc_t     p4calc;
    s0_output0_calc_t s0_output0_calc;
    s1_output0_calc_t s1_output0_calc;
    s7_output0_calc_t s7_output0_calc;
}

struct ingress_metadata_t {
}

struct metadata {
    bit<16> result_0_0;
    bit<16> result_0_1;
    bit<16> result_0_2;
    bit<16> result_0_3;
    bit<16> result_0_4;
    bit<16> result_0_5;
    bit<16> result_0_6;
    bit<16> result_0_7;
    bit<16> result_0_8;
    bit<16> result_0_9;
    bit<16> result_0_10;
    bit<16> result_0_11;
    bit<16> result_0_12;
    bit<16> result_0_13;
    bit<16> result_0_14;
    bit<16> result_0_15;
    bit<16> result_0_16;
    bit<16> result_0_17;
    bit<16> result_0_18;
    bit<16> result_0_19;
    bit<16> result_0_20;
    bit<16> result_0_21;
    bit<16> result_0_22;
    bit<16> result_0_23;
    bit<16> result_0_24;
    bit<16> result_0_25;
    bit<16> result_0_26;
    bit<16> result_0_27;
    bit<16> result_0_28;
    bit<16> result_0_29;
    bit<16> result_0_30;
    bit<16> result_0_31;
    // 存储sigmoid函数前的输入
    bit<16> result16;
}

/*************************************************************************
 ***********************  P A R S E R  ***********************************
 *************************************************************************/
parser MyParser(packet_in packet,
                out headers hdr,
                inout metadata meta,
                inout standard_metadata_t standard_metadata) {

    state start {
        packet.extract(hdr.ethernet);
        transition select(hdr.ethernet.etherType) {
            ETHERTYPE_PTP : parse_ptp;
            P4CALC_ETYPE : check_p4calc;
            default      : accept;
        }
    }

    state parse_ptp {
        packet.extract(hdr.ptp);
        transition check_p4calc;
    }

    state check_p4calc {
        transition select(packet.lookahead<p4calc_t>().p,
        packet.lookahead<p4calc_t>().four,
        packet.lookahead<p4calc_t>().ver) {
            (P4CALC_P, P4CALC_4, P4CALC_VER) : parse_p4calc;
            default                          : accept;
        }
    }

    state parse_p4calc {
        packet.extract(hdr.p4calc);
        transition parse_s0_output0_calc;
    }

    state parse_s0_output0_calc {
        packet.extract(hdr.s0_output0_calc);
        transition parse_s1_output0_calc;
    }

    state parse_s1_output0_calc {
        packet.extract(hdr.s1_output0_calc);
        transition parse_s7_output0_calc;
    }

    state parse_s7_output0_calc {
        packet.extract(hdr.s7_output0_calc);
        transition accept;
    }
}

/*************************************************************************
 ************   C H E C K S U M    V E R I F I C A T I O N   *************
 *************************************************************************/
control MyVerifyChecksum(inout headers hdr,
                         inout metadata meta) {
    apply { }
}

/*************************************************************************
 **************  I N G R E S S   P R O C E S S I N G   *******************
 *************************************************************************/
control MyIngress(inout headers hdr,
                  inout metadata meta,
                  inout standard_metadata_t standard_metadata) {

    // 丢弃
    action operation_drop() {
        mark_to_drop(standard_metadata);
    }

    // 全连接层1，8*6先flatten成1*48，线性变换变成1*32并做relu激活
    action operation_linear1() {
        bit<32> s6_output_0_0 = (bit<32>) hdr.s0_output0_calc.s0_output_0_0 | (((hdr.s0_output0_calc.s0_output_0_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_0_1 = (bit<32>) hdr.s0_output0_calc.s0_output_0_1 | (((hdr.s0_output0_calc.s0_output_0_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_0_2 = (bit<32>) hdr.s0_output0_calc.s0_output_0_2 | (((hdr.s0_output0_calc.s0_output_0_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_0_3 = (bit<32>) hdr.s0_output0_calc.s0_output_0_3 | (((hdr.s0_output0_calc.s0_output_0_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_0_4 = (bit<32>) hdr.s0_output0_calc.s0_output_0_4 | (((hdr.s0_output0_calc.s0_output_0_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_0_5 = (bit<32>) hdr.s0_output0_calc.s0_output_0_5 | (((hdr.s0_output0_calc.s0_output_0_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_0 = (bit<32>) hdr.s0_output0_calc.s0_output_1_0 | (((hdr.s0_output0_calc.s0_output_1_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_1 = (bit<32>) hdr.s0_output0_calc.s0_output_1_1 | (((hdr.s0_output0_calc.s0_output_1_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_2 = (bit<32>) hdr.s0_output0_calc.s0_output_1_2 | (((hdr.s0_output0_calc.s0_output_1_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_3 = (bit<32>) hdr.s0_output0_calc.s0_output_1_3 | (((hdr.s0_output0_calc.s0_output_1_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_4 = (bit<32>) hdr.s0_output0_calc.s0_output_1_4 | (((hdr.s0_output0_calc.s0_output_1_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_1_5 = (bit<32>) hdr.s0_output0_calc.s0_output_1_5 | (((hdr.s0_output0_calc.s0_output_1_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_0 = (bit<32>) hdr.s0_output0_calc.s0_output_2_0 | (((hdr.s0_output0_calc.s0_output_2_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_1 = (bit<32>) hdr.s0_output0_calc.s0_output_2_1 | (((hdr.s0_output0_calc.s0_output_2_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_2 = (bit<32>) hdr.s0_output0_calc.s0_output_2_2 | (((hdr.s0_output0_calc.s0_output_2_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_3 = (bit<32>) hdr.s0_output0_calc.s0_output_2_3 | (((hdr.s0_output0_calc.s0_output_2_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_4 = (bit<32>) hdr.s0_output0_calc.s0_output_2_4 | (((hdr.s0_output0_calc.s0_output_2_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_2_5 = (bit<32>) hdr.s0_output0_calc.s0_output_2_5 | (((hdr.s0_output0_calc.s0_output_2_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_0 = (bit<32>) hdr.s0_output0_calc.s0_output_3_0 | (((hdr.s0_output0_calc.s0_output_3_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_1 = (bit<32>) hdr.s0_output0_calc.s0_output_3_1 | (((hdr.s0_output0_calc.s0_output_3_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_2 = (bit<32>) hdr.s0_output0_calc.s0_output_3_2 | (((hdr.s0_output0_calc.s0_output_3_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_3 = (bit<32>) hdr.s0_output0_calc.s0_output_3_3 | (((hdr.s0_output0_calc.s0_output_3_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_4 = (bit<32>) hdr.s0_output0_calc.s0_output_3_4 | (((hdr.s0_output0_calc.s0_output_3_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_3_5 = (bit<32>) hdr.s0_output0_calc.s0_output_3_5 | (((hdr.s0_output0_calc.s0_output_3_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_0 = (bit<32>) hdr.s0_output0_calc.s0_output_4_0 | (((hdr.s0_output0_calc.s0_output_4_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_1 = (bit<32>) hdr.s0_output0_calc.s0_output_4_1 | (((hdr.s0_output0_calc.s0_output_4_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_2 = (bit<32>) hdr.s0_output0_calc.s0_output_4_2 | (((hdr.s0_output0_calc.s0_output_4_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_3 = (bit<32>) hdr.s0_output0_calc.s0_output_4_3 | (((hdr.s0_output0_calc.s0_output_4_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_4 = (bit<32>) hdr.s0_output0_calc.s0_output_4_4 | (((hdr.s0_output0_calc.s0_output_4_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_4_5 = (bit<32>) hdr.s0_output0_calc.s0_output_4_5 | (((hdr.s0_output0_calc.s0_output_4_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_0 = (bit<32>) hdr.s0_output0_calc.s0_output_5_0 | (((hdr.s0_output0_calc.s0_output_5_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_1 = (bit<32>) hdr.s0_output0_calc.s0_output_5_1 | (((hdr.s0_output0_calc.s0_output_5_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_2 = (bit<32>) hdr.s0_output0_calc.s0_output_5_2 | (((hdr.s0_output0_calc.s0_output_5_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_3 = (bit<32>) hdr.s0_output0_calc.s0_output_5_3 | (((hdr.s0_output0_calc.s0_output_5_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_4 = (bit<32>) hdr.s0_output0_calc.s0_output_5_4 | (((hdr.s0_output0_calc.s0_output_5_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_5_5 = (bit<32>) hdr.s0_output0_calc.s0_output_5_5 | (((hdr.s0_output0_calc.s0_output_5_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_0 = (bit<32>) hdr.s0_output0_calc.s0_output_6_0 | (((hdr.s0_output0_calc.s0_output_6_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_1 = (bit<32>) hdr.s0_output0_calc.s0_output_6_1 | (((hdr.s0_output0_calc.s0_output_6_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_2 = (bit<32>) hdr.s0_output0_calc.s0_output_6_2 | (((hdr.s0_output0_calc.s0_output_6_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_3 = (bit<32>) hdr.s0_output0_calc.s0_output_6_3 | (((hdr.s0_output0_calc.s0_output_6_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_4 = (bit<32>) hdr.s0_output0_calc.s0_output_6_4 | (((hdr.s0_output0_calc.s0_output_6_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_6_5 = (bit<32>) hdr.s0_output0_calc.s0_output_6_5 | (((hdr.s0_output0_calc.s0_output_6_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_0 = (bit<32>) hdr.s0_output0_calc.s0_output_7_0 | (((hdr.s0_output0_calc.s0_output_7_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_1 = (bit<32>) hdr.s0_output0_calc.s0_output_7_1 | (((hdr.s0_output0_calc.s0_output_7_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_2 = (bit<32>) hdr.s0_output0_calc.s0_output_7_2 | (((hdr.s0_output0_calc.s0_output_7_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_3 = (bit<32>) hdr.s0_output0_calc.s0_output_7_3 | (((hdr.s0_output0_calc.s0_output_7_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_4 = (bit<32>) hdr.s0_output0_calc.s0_output_7_4 | (((hdr.s0_output0_calc.s0_output_7_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> s6_output_7_5 = (bit<32>) hdr.s0_output0_calc.s0_output_7_5 | (((hdr.s0_output0_calc.s0_output_7_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
                
        // 线性变换->1*32
        meta.result_0_0 = (s6_output_0_0 * w1_0_0 + s6_output_0_1 * w1_1_0 + s6_output_0_2 * w1_2_0 + s6_output_0_3 * w1_3_0 + s6_output_0_4 * w1_4_0 + s6_output_0_5 * w1_5_0 + s6_output_1_0 * w1_6_0 + s6_output_1_1 * w1_7_0 + s6_output_1_2 * w1_8_0 + s6_output_1_3 * w1_9_0 + s6_output_1_4 * w1_10_0 + s6_output_1_5 * w1_11_0 + s6_output_2_0 * w1_12_0 + s6_output_2_1 * w1_13_0 + s6_output_2_2 * w1_14_0 + s6_output_2_3 * w1_15_0 + s6_output_2_4 * w1_16_0 + s6_output_2_5 * w1_17_0 + s6_output_3_0 * w1_18_0 + s6_output_3_1 * w1_19_0 + s6_output_3_2 * w1_20_0 + s6_output_3_3 * w1_21_0 + s6_output_3_4 * w1_22_0 + s6_output_3_5 * w1_23_0 + s6_output_4_0 * w1_24_0 + s6_output_4_1 * w1_25_0 + s6_output_4_2 * w1_26_0 + s6_output_4_3 * w1_27_0 + s6_output_4_4 * w1_28_0 + s6_output_4_5 * w1_29_0 + s6_output_5_0 * w1_30_0 + s6_output_5_1 * w1_31_0 + s6_output_5_2 * w1_32_0 + s6_output_5_3 * w1_33_0 + s6_output_5_4 * w1_34_0 + s6_output_5_5 * w1_35_0 + s6_output_6_0 * w1_36_0 + s6_output_6_1 * w1_37_0 + s6_output_6_2 * w1_38_0 + s6_output_6_3 * w1_39_0 + s6_output_6_4 * w1_40_0 + s6_output_6_5 * w1_41_0 + s6_output_7_0 * w1_42_0 + s6_output_7_1 * w1_43_0 + s6_output_7_2 * w1_44_0 + s6_output_7_3 * w1_45_0 + s6_output_7_4 * w1_46_0 + s6_output_7_5 * w1_47_0)[23:8] + b1_0;
        meta.result_0_1 = (s6_output_0_0 * w1_0_1 + s6_output_0_1 * w1_1_1 + s6_output_0_2 * w1_2_1 + s6_output_0_3 * w1_3_1 + s6_output_0_4 * w1_4_1 + s6_output_0_5 * w1_5_1 + s6_output_1_0 * w1_6_1 + s6_output_1_1 * w1_7_1 + s6_output_1_2 * w1_8_1 + s6_output_1_3 * w1_9_1 + s6_output_1_4 * w1_10_1 + s6_output_1_5 * w1_11_1 + s6_output_2_0 * w1_12_1 + s6_output_2_1 * w1_13_1 + s6_output_2_2 * w1_14_1 + s6_output_2_3 * w1_15_1 + s6_output_2_4 * w1_16_1 + s6_output_2_5 * w1_17_1 + s6_output_3_0 * w1_18_1 + s6_output_3_1 * w1_19_1 + s6_output_3_2 * w1_20_1 + s6_output_3_3 * w1_21_1 + s6_output_3_4 * w1_22_1 + s6_output_3_5 * w1_23_1 + s6_output_4_0 * w1_24_1 + s6_output_4_1 * w1_25_1 + s6_output_4_2 * w1_26_1 + s6_output_4_3 * w1_27_1 + s6_output_4_4 * w1_28_1 + s6_output_4_5 * w1_29_1 + s6_output_5_0 * w1_30_1 + s6_output_5_1 * w1_31_1 + s6_output_5_2 * w1_32_1 + s6_output_5_3 * w1_33_1 + s6_output_5_4 * w1_34_1 + s6_output_5_5 * w1_35_1 + s6_output_6_0 * w1_36_1 + s6_output_6_1 * w1_37_1 + s6_output_6_2 * w1_38_1 + s6_output_6_3 * w1_39_1 + s6_output_6_4 * w1_40_1 + s6_output_6_5 * w1_41_1 + s6_output_7_0 * w1_42_1 + s6_output_7_1 * w1_43_1 + s6_output_7_2 * w1_44_1 + s6_output_7_3 * w1_45_1 + s6_output_7_4 * w1_46_1 + s6_output_7_5 * w1_47_1)[23:8] + b1_1;
        meta.result_0_2 = (s6_output_0_0 * w1_0_2 + s6_output_0_1 * w1_1_2 + s6_output_0_2 * w1_2_2 + s6_output_0_3 * w1_3_2 + s6_output_0_4 * w1_4_2 + s6_output_0_5 * w1_5_2 + s6_output_1_0 * w1_6_2 + s6_output_1_1 * w1_7_2 + s6_output_1_2 * w1_8_2 + s6_output_1_3 * w1_9_2 + s6_output_1_4 * w1_10_2 + s6_output_1_5 * w1_11_2 + s6_output_2_0 * w1_12_2 + s6_output_2_1 * w1_13_2 + s6_output_2_2 * w1_14_2 + s6_output_2_3 * w1_15_2 + s6_output_2_4 * w1_16_2 + s6_output_2_5 * w1_17_2 + s6_output_3_0 * w1_18_2 + s6_output_3_1 * w1_19_2 + s6_output_3_2 * w1_20_2 + s6_output_3_3 * w1_21_2 + s6_output_3_4 * w1_22_2 + s6_output_3_5 * w1_23_2 + s6_output_4_0 * w1_24_2 + s6_output_4_1 * w1_25_2 + s6_output_4_2 * w1_26_2 + s6_output_4_3 * w1_27_2 + s6_output_4_4 * w1_28_2 + s6_output_4_5 * w1_29_2 + s6_output_5_0 * w1_30_2 + s6_output_5_1 * w1_31_2 + s6_output_5_2 * w1_32_2 + s6_output_5_3 * w1_33_2 + s6_output_5_4 * w1_34_2 + s6_output_5_5 * w1_35_2 + s6_output_6_0 * w1_36_2 + s6_output_6_1 * w1_37_2 + s6_output_6_2 * w1_38_2 + s6_output_6_3 * w1_39_2 + s6_output_6_4 * w1_40_2 + s6_output_6_5 * w1_41_2 + s6_output_7_0 * w1_42_2 + s6_output_7_1 * w1_43_2 + s6_output_7_2 * w1_44_2 + s6_output_7_3 * w1_45_2 + s6_output_7_4 * w1_46_2 + s6_output_7_5 * w1_47_2)[23:8] + b1_2;
        meta.result_0_3 = (s6_output_0_0 * w1_0_3 + s6_output_0_1 * w1_1_3 + s6_output_0_2 * w1_2_3 + s6_output_0_3 * w1_3_3 + s6_output_0_4 * w1_4_3 + s6_output_0_5 * w1_5_3 + s6_output_1_0 * w1_6_3 + s6_output_1_1 * w1_7_3 + s6_output_1_2 * w1_8_3 + s6_output_1_3 * w1_9_3 + s6_output_1_4 * w1_10_3 + s6_output_1_5 * w1_11_3 + s6_output_2_0 * w1_12_3 + s6_output_2_1 * w1_13_3 + s6_output_2_2 * w1_14_3 + s6_output_2_3 * w1_15_3 + s6_output_2_4 * w1_16_3 + s6_output_2_5 * w1_17_3 + s6_output_3_0 * w1_18_3 + s6_output_3_1 * w1_19_3 + s6_output_3_2 * w1_20_3 + s6_output_3_3 * w1_21_3 + s6_output_3_4 * w1_22_3 + s6_output_3_5 * w1_23_3 + s6_output_4_0 * w1_24_3 + s6_output_4_1 * w1_25_3 + s6_output_4_2 * w1_26_3 + s6_output_4_3 * w1_27_3 + s6_output_4_4 * w1_28_3 + s6_output_4_5 * w1_29_3 + s6_output_5_0 * w1_30_3 + s6_output_5_1 * w1_31_3 + s6_output_5_2 * w1_32_3 + s6_output_5_3 * w1_33_3 + s6_output_5_4 * w1_34_3 + s6_output_5_5 * w1_35_3 + s6_output_6_0 * w1_36_3 + s6_output_6_1 * w1_37_3 + s6_output_6_2 * w1_38_3 + s6_output_6_3 * w1_39_3 + s6_output_6_4 * w1_40_3 + s6_output_6_5 * w1_41_3 + s6_output_7_0 * w1_42_3 + s6_output_7_1 * w1_43_3 + s6_output_7_2 * w1_44_3 + s6_output_7_3 * w1_45_3 + s6_output_7_4 * w1_46_3 + s6_output_7_5 * w1_47_3)[23:8] + b1_3;
        meta.result_0_4 = (s6_output_0_0 * w1_0_4 + s6_output_0_1 * w1_1_4 + s6_output_0_2 * w1_2_4 + s6_output_0_3 * w1_3_4 + s6_output_0_4 * w1_4_4 + s6_output_0_5 * w1_5_4 + s6_output_1_0 * w1_6_4 + s6_output_1_1 * w1_7_4 + s6_output_1_2 * w1_8_4 + s6_output_1_3 * w1_9_4 + s6_output_1_4 * w1_10_4 + s6_output_1_5 * w1_11_4 + s6_output_2_0 * w1_12_4 + s6_output_2_1 * w1_13_4 + s6_output_2_2 * w1_14_4 + s6_output_2_3 * w1_15_4 + s6_output_2_4 * w1_16_4 + s6_output_2_5 * w1_17_4 + s6_output_3_0 * w1_18_4 + s6_output_3_1 * w1_19_4 + s6_output_3_2 * w1_20_4 + s6_output_3_3 * w1_21_4 + s6_output_3_4 * w1_22_4 + s6_output_3_5 * w1_23_4 + s6_output_4_0 * w1_24_4 + s6_output_4_1 * w1_25_4 + s6_output_4_2 * w1_26_4 + s6_output_4_3 * w1_27_4 + s6_output_4_4 * w1_28_4 + s6_output_4_5 * w1_29_4 + s6_output_5_0 * w1_30_4 + s6_output_5_1 * w1_31_4 + s6_output_5_2 * w1_32_4 + s6_output_5_3 * w1_33_4 + s6_output_5_4 * w1_34_4 + s6_output_5_5 * w1_35_4 + s6_output_6_0 * w1_36_4 + s6_output_6_1 * w1_37_4 + s6_output_6_2 * w1_38_4 + s6_output_6_3 * w1_39_4 + s6_output_6_4 * w1_40_4 + s6_output_6_5 * w1_41_4 + s6_output_7_0 * w1_42_4 + s6_output_7_1 * w1_43_4 + s6_output_7_2 * w1_44_4 + s6_output_7_3 * w1_45_4 + s6_output_7_4 * w1_46_4 + s6_output_7_5 * w1_47_4)[23:8] + b1_4;
        meta.result_0_5 = (s6_output_0_0 * w1_0_5 + s6_output_0_1 * w1_1_5 + s6_output_0_2 * w1_2_5 + s6_output_0_3 * w1_3_5 + s6_output_0_4 * w1_4_5 + s6_output_0_5 * w1_5_5 + s6_output_1_0 * w1_6_5 + s6_output_1_1 * w1_7_5 + s6_output_1_2 * w1_8_5 + s6_output_1_3 * w1_9_5 + s6_output_1_4 * w1_10_5 + s6_output_1_5 * w1_11_5 + s6_output_2_0 * w1_12_5 + s6_output_2_1 * w1_13_5 + s6_output_2_2 * w1_14_5 + s6_output_2_3 * w1_15_5 + s6_output_2_4 * w1_16_5 + s6_output_2_5 * w1_17_5 + s6_output_3_0 * w1_18_5 + s6_output_3_1 * w1_19_5 + s6_output_3_2 * w1_20_5 + s6_output_3_3 * w1_21_5 + s6_output_3_4 * w1_22_5 + s6_output_3_5 * w1_23_5 + s6_output_4_0 * w1_24_5 + s6_output_4_1 * w1_25_5 + s6_output_4_2 * w1_26_5 + s6_output_4_3 * w1_27_5 + s6_output_4_4 * w1_28_5 + s6_output_4_5 * w1_29_5 + s6_output_5_0 * w1_30_5 + s6_output_5_1 * w1_31_5 + s6_output_5_2 * w1_32_5 + s6_output_5_3 * w1_33_5 + s6_output_5_4 * w1_34_5 + s6_output_5_5 * w1_35_5 + s6_output_6_0 * w1_36_5 + s6_output_6_1 * w1_37_5 + s6_output_6_2 * w1_38_5 + s6_output_6_3 * w1_39_5 + s6_output_6_4 * w1_40_5 + s6_output_6_5 * w1_41_5 + s6_output_7_0 * w1_42_5 + s6_output_7_1 * w1_43_5 + s6_output_7_2 * w1_44_5 + s6_output_7_3 * w1_45_5 + s6_output_7_4 * w1_46_5 + s6_output_7_5 * w1_47_5)[23:8] + b1_5;
        meta.result_0_6 = (s6_output_0_0 * w1_0_6 + s6_output_0_1 * w1_1_6 + s6_output_0_2 * w1_2_6 + s6_output_0_3 * w1_3_6 + s6_output_0_4 * w1_4_6 + s6_output_0_5 * w1_5_6 + s6_output_1_0 * w1_6_6 + s6_output_1_1 * w1_7_6 + s6_output_1_2 * w1_8_6 + s6_output_1_3 * w1_9_6 + s6_output_1_4 * w1_10_6 + s6_output_1_5 * w1_11_6 + s6_output_2_0 * w1_12_6 + s6_output_2_1 * w1_13_6 + s6_output_2_2 * w1_14_6 + s6_output_2_3 * w1_15_6 + s6_output_2_4 * w1_16_6 + s6_output_2_5 * w1_17_6 + s6_output_3_0 * w1_18_6 + s6_output_3_1 * w1_19_6 + s6_output_3_2 * w1_20_6 + s6_output_3_3 * w1_21_6 + s6_output_3_4 * w1_22_6 + s6_output_3_5 * w1_23_6 + s6_output_4_0 * w1_24_6 + s6_output_4_1 * w1_25_6 + s6_output_4_2 * w1_26_6 + s6_output_4_3 * w1_27_6 + s6_output_4_4 * w1_28_6 + s6_output_4_5 * w1_29_6 + s6_output_5_0 * w1_30_6 + s6_output_5_1 * w1_31_6 + s6_output_5_2 * w1_32_6 + s6_output_5_3 * w1_33_6 + s6_output_5_4 * w1_34_6 + s6_output_5_5 * w1_35_6 + s6_output_6_0 * w1_36_6 + s6_output_6_1 * w1_37_6 + s6_output_6_2 * w1_38_6 + s6_output_6_3 * w1_39_6 + s6_output_6_4 * w1_40_6 + s6_output_6_5 * w1_41_6 + s6_output_7_0 * w1_42_6 + s6_output_7_1 * w1_43_6 + s6_output_7_2 * w1_44_6 + s6_output_7_3 * w1_45_6 + s6_output_7_4 * w1_46_6 + s6_output_7_5 * w1_47_6)[23:8] + b1_6;
        meta.result_0_7 = (s6_output_0_0 * w1_0_7 + s6_output_0_1 * w1_1_7 + s6_output_0_2 * w1_2_7 + s6_output_0_3 * w1_3_7 + s6_output_0_4 * w1_4_7 + s6_output_0_5 * w1_5_7 + s6_output_1_0 * w1_6_7 + s6_output_1_1 * w1_7_7 + s6_output_1_2 * w1_8_7 + s6_output_1_3 * w1_9_7 + s6_output_1_4 * w1_10_7 + s6_output_1_5 * w1_11_7 + s6_output_2_0 * w1_12_7 + s6_output_2_1 * w1_13_7 + s6_output_2_2 * w1_14_7 + s6_output_2_3 * w1_15_7 + s6_output_2_4 * w1_16_7 + s6_output_2_5 * w1_17_7 + s6_output_3_0 * w1_18_7 + s6_output_3_1 * w1_19_7 + s6_output_3_2 * w1_20_7 + s6_output_3_3 * w1_21_7 + s6_output_3_4 * w1_22_7 + s6_output_3_5 * w1_23_7 + s6_output_4_0 * w1_24_7 + s6_output_4_1 * w1_25_7 + s6_output_4_2 * w1_26_7 + s6_output_4_3 * w1_27_7 + s6_output_4_4 * w1_28_7 + s6_output_4_5 * w1_29_7 + s6_output_5_0 * w1_30_7 + s6_output_5_1 * w1_31_7 + s6_output_5_2 * w1_32_7 + s6_output_5_3 * w1_33_7 + s6_output_5_4 * w1_34_7 + s6_output_5_5 * w1_35_7 + s6_output_6_0 * w1_36_7 + s6_output_6_1 * w1_37_7 + s6_output_6_2 * w1_38_7 + s6_output_6_3 * w1_39_7 + s6_output_6_4 * w1_40_7 + s6_output_6_5 * w1_41_7 + s6_output_7_0 * w1_42_7 + s6_output_7_1 * w1_43_7 + s6_output_7_2 * w1_44_7 + s6_output_7_3 * w1_45_7 + s6_output_7_4 * w1_46_7 + s6_output_7_5 * w1_47_7)[23:8] + b1_7;
        meta.result_0_8 = (s6_output_0_0 * w1_0_8 + s6_output_0_1 * w1_1_8 + s6_output_0_2 * w1_2_8 + s6_output_0_3 * w1_3_8 + s6_output_0_4 * w1_4_8 + s6_output_0_5 * w1_5_8 + s6_output_1_0 * w1_6_8 + s6_output_1_1 * w1_7_8 + s6_output_1_2 * w1_8_8 + s6_output_1_3 * w1_9_8 + s6_output_1_4 * w1_10_8 + s6_output_1_5 * w1_11_8 + s6_output_2_0 * w1_12_8 + s6_output_2_1 * w1_13_8 + s6_output_2_2 * w1_14_8 + s6_output_2_3 * w1_15_8 + s6_output_2_4 * w1_16_8 + s6_output_2_5 * w1_17_8 + s6_output_3_0 * w1_18_8 + s6_output_3_1 * w1_19_8 + s6_output_3_2 * w1_20_8 + s6_output_3_3 * w1_21_8 + s6_output_3_4 * w1_22_8 + s6_output_3_5 * w1_23_8 + s6_output_4_0 * w1_24_8 + s6_output_4_1 * w1_25_8 + s6_output_4_2 * w1_26_8 + s6_output_4_3 * w1_27_8 + s6_output_4_4 * w1_28_8 + s6_output_4_5 * w1_29_8 + s6_output_5_0 * w1_30_8 + s6_output_5_1 * w1_31_8 + s6_output_5_2 * w1_32_8 + s6_output_5_3 * w1_33_8 + s6_output_5_4 * w1_34_8 + s6_output_5_5 * w1_35_8 + s6_output_6_0 * w1_36_8 + s6_output_6_1 * w1_37_8 + s6_output_6_2 * w1_38_8 + s6_output_6_3 * w1_39_8 + s6_output_6_4 * w1_40_8 + s6_output_6_5 * w1_41_8 + s6_output_7_0 * w1_42_8 + s6_output_7_1 * w1_43_8 + s6_output_7_2 * w1_44_8 + s6_output_7_3 * w1_45_8 + s6_output_7_4 * w1_46_8 + s6_output_7_5 * w1_47_8)[23:8] + b1_8;
        meta.result_0_9 = (s6_output_0_0 * w1_0_9 + s6_output_0_1 * w1_1_9 + s6_output_0_2 * w1_2_9 + s6_output_0_3 * w1_3_9 + s6_output_0_4 * w1_4_9 + s6_output_0_5 * w1_5_9 + s6_output_1_0 * w1_6_9 + s6_output_1_1 * w1_7_9 + s6_output_1_2 * w1_8_9 + s6_output_1_3 * w1_9_9 + s6_output_1_4 * w1_10_9 + s6_output_1_5 * w1_11_9 + s6_output_2_0 * w1_12_9 + s6_output_2_1 * w1_13_9 + s6_output_2_2 * w1_14_9 + s6_output_2_3 * w1_15_9 + s6_output_2_4 * w1_16_9 + s6_output_2_5 * w1_17_9 + s6_output_3_0 * w1_18_9 + s6_output_3_1 * w1_19_9 + s6_output_3_2 * w1_20_9 + s6_output_3_3 * w1_21_9 + s6_output_3_4 * w1_22_9 + s6_output_3_5 * w1_23_9 + s6_output_4_0 * w1_24_9 + s6_output_4_1 * w1_25_9 + s6_output_4_2 * w1_26_9 + s6_output_4_3 * w1_27_9 + s6_output_4_4 * w1_28_9 + s6_output_4_5 * w1_29_9 + s6_output_5_0 * w1_30_9 + s6_output_5_1 * w1_31_9 + s6_output_5_2 * w1_32_9 + s6_output_5_3 * w1_33_9 + s6_output_5_4 * w1_34_9 + s6_output_5_5 * w1_35_9 + s6_output_6_0 * w1_36_9 + s6_output_6_1 * w1_37_9 + s6_output_6_2 * w1_38_9 + s6_output_6_3 * w1_39_9 + s6_output_6_4 * w1_40_9 + s6_output_6_5 * w1_41_9 + s6_output_7_0 * w1_42_9 + s6_output_7_1 * w1_43_9 + s6_output_7_2 * w1_44_9 + s6_output_7_3 * w1_45_9 + s6_output_7_4 * w1_46_9 + s6_output_7_5 * w1_47_9)[23:8] + b1_9;
        meta.result_0_10 = (s6_output_0_0 * w1_0_10 + s6_output_0_1 * w1_1_10 + s6_output_0_2 * w1_2_10 + s6_output_0_3 * w1_3_10 + s6_output_0_4 * w1_4_10 + s6_output_0_5 * w1_5_10 + s6_output_1_0 * w1_6_10 + s6_output_1_1 * w1_7_10 + s6_output_1_2 * w1_8_10 + s6_output_1_3 * w1_9_10 + s6_output_1_4 * w1_10_10 + s6_output_1_5 * w1_11_10 + s6_output_2_0 * w1_12_10 + s6_output_2_1 * w1_13_10 + s6_output_2_2 * w1_14_10 + s6_output_2_3 * w1_15_10 + s6_output_2_4 * w1_16_10 + s6_output_2_5 * w1_17_10 + s6_output_3_0 * w1_18_10 + s6_output_3_1 * w1_19_10 + s6_output_3_2 * w1_20_10 + s6_output_3_3 * w1_21_10 + s6_output_3_4 * w1_22_10 + s6_output_3_5 * w1_23_10 + s6_output_4_0 * w1_24_10 + s6_output_4_1 * w1_25_10 + s6_output_4_2 * w1_26_10 + s6_output_4_3 * w1_27_10 + s6_output_4_4 * w1_28_10 + s6_output_4_5 * w1_29_10 + s6_output_5_0 * w1_30_10 + s6_output_5_1 * w1_31_10 + s6_output_5_2 * w1_32_10 + s6_output_5_3 * w1_33_10 + s6_output_5_4 * w1_34_10 + s6_output_5_5 * w1_35_10 + s6_output_6_0 * w1_36_10 + s6_output_6_1 * w1_37_10 + s6_output_6_2 * w1_38_10 + s6_output_6_3 * w1_39_10 + s6_output_6_4 * w1_40_10 + s6_output_6_5 * w1_41_10 + s6_output_7_0 * w1_42_10 + s6_output_7_1 * w1_43_10 + s6_output_7_2 * w1_44_10 + s6_output_7_3 * w1_45_10 + s6_output_7_4 * w1_46_10 + s6_output_7_5 * w1_47_10)[23:8] + b1_10;
        meta.result_0_11 = (s6_output_0_0 * w1_0_11 + s6_output_0_1 * w1_1_11 + s6_output_0_2 * w1_2_11 + s6_output_0_3 * w1_3_11 + s6_output_0_4 * w1_4_11 + s6_output_0_5 * w1_5_11 + s6_output_1_0 * w1_6_11 + s6_output_1_1 * w1_7_11 + s6_output_1_2 * w1_8_11 + s6_output_1_3 * w1_9_11 + s6_output_1_4 * w1_10_11 + s6_output_1_5 * w1_11_11 + s6_output_2_0 * w1_12_11 + s6_output_2_1 * w1_13_11 + s6_output_2_2 * w1_14_11 + s6_output_2_3 * w1_15_11 + s6_output_2_4 * w1_16_11 + s6_output_2_5 * w1_17_11 + s6_output_3_0 * w1_18_11 + s6_output_3_1 * w1_19_11 + s6_output_3_2 * w1_20_11 + s6_output_3_3 * w1_21_11 + s6_output_3_4 * w1_22_11 + s6_output_3_5 * w1_23_11 + s6_output_4_0 * w1_24_11 + s6_output_4_1 * w1_25_11 + s6_output_4_2 * w1_26_11 + s6_output_4_3 * w1_27_11 + s6_output_4_4 * w1_28_11 + s6_output_4_5 * w1_29_11 + s6_output_5_0 * w1_30_11 + s6_output_5_1 * w1_31_11 + s6_output_5_2 * w1_32_11 + s6_output_5_3 * w1_33_11 + s6_output_5_4 * w1_34_11 + s6_output_5_5 * w1_35_11 + s6_output_6_0 * w1_36_11 + s6_output_6_1 * w1_37_11 + s6_output_6_2 * w1_38_11 + s6_output_6_3 * w1_39_11 + s6_output_6_4 * w1_40_11 + s6_output_6_5 * w1_41_11 + s6_output_7_0 * w1_42_11 + s6_output_7_1 * w1_43_11 + s6_output_7_2 * w1_44_11 + s6_output_7_3 * w1_45_11 + s6_output_7_4 * w1_46_11 + s6_output_7_5 * w1_47_11)[23:8] + b1_11;
        meta.result_0_12 = (s6_output_0_0 * w1_0_12 + s6_output_0_1 * w1_1_12 + s6_output_0_2 * w1_2_12 + s6_output_0_3 * w1_3_12 + s6_output_0_4 * w1_4_12 + s6_output_0_5 * w1_5_12 + s6_output_1_0 * w1_6_12 + s6_output_1_1 * w1_7_12 + s6_output_1_2 * w1_8_12 + s6_output_1_3 * w1_9_12 + s6_output_1_4 * w1_10_12 + s6_output_1_5 * w1_11_12 + s6_output_2_0 * w1_12_12 + s6_output_2_1 * w1_13_12 + s6_output_2_2 * w1_14_12 + s6_output_2_3 * w1_15_12 + s6_output_2_4 * w1_16_12 + s6_output_2_5 * w1_17_12 + s6_output_3_0 * w1_18_12 + s6_output_3_1 * w1_19_12 + s6_output_3_2 * w1_20_12 + s6_output_3_3 * w1_21_12 + s6_output_3_4 * w1_22_12 + s6_output_3_5 * w1_23_12 + s6_output_4_0 * w1_24_12 + s6_output_4_1 * w1_25_12 + s6_output_4_2 * w1_26_12 + s6_output_4_3 * w1_27_12 + s6_output_4_4 * w1_28_12 + s6_output_4_5 * w1_29_12 + s6_output_5_0 * w1_30_12 + s6_output_5_1 * w1_31_12 + s6_output_5_2 * w1_32_12 + s6_output_5_3 * w1_33_12 + s6_output_5_4 * w1_34_12 + s6_output_5_5 * w1_35_12 + s6_output_6_0 * w1_36_12 + s6_output_6_1 * w1_37_12 + s6_output_6_2 * w1_38_12 + s6_output_6_3 * w1_39_12 + s6_output_6_4 * w1_40_12 + s6_output_6_5 * w1_41_12 + s6_output_7_0 * w1_42_12 + s6_output_7_1 * w1_43_12 + s6_output_7_2 * w1_44_12 + s6_output_7_3 * w1_45_12 + s6_output_7_4 * w1_46_12 + s6_output_7_5 * w1_47_12)[23:8] + b1_12;
        meta.result_0_13 = (s6_output_0_0 * w1_0_13 + s6_output_0_1 * w1_1_13 + s6_output_0_2 * w1_2_13 + s6_output_0_3 * w1_3_13 + s6_output_0_4 * w1_4_13 + s6_output_0_5 * w1_5_13 + s6_output_1_0 * w1_6_13 + s6_output_1_1 * w1_7_13 + s6_output_1_2 * w1_8_13 + s6_output_1_3 * w1_9_13 + s6_output_1_4 * w1_10_13 + s6_output_1_5 * w1_11_13 + s6_output_2_0 * w1_12_13 + s6_output_2_1 * w1_13_13 + s6_output_2_2 * w1_14_13 + s6_output_2_3 * w1_15_13 + s6_output_2_4 * w1_16_13 + s6_output_2_5 * w1_17_13 + s6_output_3_0 * w1_18_13 + s6_output_3_1 * w1_19_13 + s6_output_3_2 * w1_20_13 + s6_output_3_3 * w1_21_13 + s6_output_3_4 * w1_22_13 + s6_output_3_5 * w1_23_13 + s6_output_4_0 * w1_24_13 + s6_output_4_1 * w1_25_13 + s6_output_4_2 * w1_26_13 + s6_output_4_3 * w1_27_13 + s6_output_4_4 * w1_28_13 + s6_output_4_5 * w1_29_13 + s6_output_5_0 * w1_30_13 + s6_output_5_1 * w1_31_13 + s6_output_5_2 * w1_32_13 + s6_output_5_3 * w1_33_13 + s6_output_5_4 * w1_34_13 + s6_output_5_5 * w1_35_13 + s6_output_6_0 * w1_36_13 + s6_output_6_1 * w1_37_13 + s6_output_6_2 * w1_38_13 + s6_output_6_3 * w1_39_13 + s6_output_6_4 * w1_40_13 + s6_output_6_5 * w1_41_13 + s6_output_7_0 * w1_42_13 + s6_output_7_1 * w1_43_13 + s6_output_7_2 * w1_44_13 + s6_output_7_3 * w1_45_13 + s6_output_7_4 * w1_46_13 + s6_output_7_5 * w1_47_13)[23:8] + b1_13;
        meta.result_0_14 = (s6_output_0_0 * w1_0_14 + s6_output_0_1 * w1_1_14 + s6_output_0_2 * w1_2_14 + s6_output_0_3 * w1_3_14 + s6_output_0_4 * w1_4_14 + s6_output_0_5 * w1_5_14 + s6_output_1_0 * w1_6_14 + s6_output_1_1 * w1_7_14 + s6_output_1_2 * w1_8_14 + s6_output_1_3 * w1_9_14 + s6_output_1_4 * w1_10_14 + s6_output_1_5 * w1_11_14 + s6_output_2_0 * w1_12_14 + s6_output_2_1 * w1_13_14 + s6_output_2_2 * w1_14_14 + s6_output_2_3 * w1_15_14 + s6_output_2_4 * w1_16_14 + s6_output_2_5 * w1_17_14 + s6_output_3_0 * w1_18_14 + s6_output_3_1 * w1_19_14 + s6_output_3_2 * w1_20_14 + s6_output_3_3 * w1_21_14 + s6_output_3_4 * w1_22_14 + s6_output_3_5 * w1_23_14 + s6_output_4_0 * w1_24_14 + s6_output_4_1 * w1_25_14 + s6_output_4_2 * w1_26_14 + s6_output_4_3 * w1_27_14 + s6_output_4_4 * w1_28_14 + s6_output_4_5 * w1_29_14 + s6_output_5_0 * w1_30_14 + s6_output_5_1 * w1_31_14 + s6_output_5_2 * w1_32_14 + s6_output_5_3 * w1_33_14 + s6_output_5_4 * w1_34_14 + s6_output_5_5 * w1_35_14 + s6_output_6_0 * w1_36_14 + s6_output_6_1 * w1_37_14 + s6_output_6_2 * w1_38_14 + s6_output_6_3 * w1_39_14 + s6_output_6_4 * w1_40_14 + s6_output_6_5 * w1_41_14 + s6_output_7_0 * w1_42_14 + s6_output_7_1 * w1_43_14 + s6_output_7_2 * w1_44_14 + s6_output_7_3 * w1_45_14 + s6_output_7_4 * w1_46_14 + s6_output_7_5 * w1_47_14)[23:8] + b1_14;
        meta.result_0_15 = (s6_output_0_0 * w1_0_15 + s6_output_0_1 * w1_1_15 + s6_output_0_2 * w1_2_15 + s6_output_0_3 * w1_3_15 + s6_output_0_4 * w1_4_15 + s6_output_0_5 * w1_5_15 + s6_output_1_0 * w1_6_15 + s6_output_1_1 * w1_7_15 + s6_output_1_2 * w1_8_15 + s6_output_1_3 * w1_9_15 + s6_output_1_4 * w1_10_15 + s6_output_1_5 * w1_11_15 + s6_output_2_0 * w1_12_15 + s6_output_2_1 * w1_13_15 + s6_output_2_2 * w1_14_15 + s6_output_2_3 * w1_15_15 + s6_output_2_4 * w1_16_15 + s6_output_2_5 * w1_17_15 + s6_output_3_0 * w1_18_15 + s6_output_3_1 * w1_19_15 + s6_output_3_2 * w1_20_15 + s6_output_3_3 * w1_21_15 + s6_output_3_4 * w1_22_15 + s6_output_3_5 * w1_23_15 + s6_output_4_0 * w1_24_15 + s6_output_4_1 * w1_25_15 + s6_output_4_2 * w1_26_15 + s6_output_4_3 * w1_27_15 + s6_output_4_4 * w1_28_15 + s6_output_4_5 * w1_29_15 + s6_output_5_0 * w1_30_15 + s6_output_5_1 * w1_31_15 + s6_output_5_2 * w1_32_15 + s6_output_5_3 * w1_33_15 + s6_output_5_4 * w1_34_15 + s6_output_5_5 * w1_35_15 + s6_output_6_0 * w1_36_15 + s6_output_6_1 * w1_37_15 + s6_output_6_2 * w1_38_15 + s6_output_6_3 * w1_39_15 + s6_output_6_4 * w1_40_15 + s6_output_6_5 * w1_41_15 + s6_output_7_0 * w1_42_15 + s6_output_7_1 * w1_43_15 + s6_output_7_2 * w1_44_15 + s6_output_7_3 * w1_45_15 + s6_output_7_4 * w1_46_15 + s6_output_7_5 * w1_47_15)[23:8] + b1_15;
        meta.result_0_16 = (s6_output_0_0 * w1_0_16 + s6_output_0_1 * w1_1_16 + s6_output_0_2 * w1_2_16 + s6_output_0_3 * w1_3_16 + s6_output_0_4 * w1_4_16 + s6_output_0_5 * w1_5_16 + s6_output_1_0 * w1_6_16 + s6_output_1_1 * w1_7_16 + s6_output_1_2 * w1_8_16 + s6_output_1_3 * w1_9_16 + s6_output_1_4 * w1_10_16 + s6_output_1_5 * w1_11_16 + s6_output_2_0 * w1_12_16 + s6_output_2_1 * w1_13_16 + s6_output_2_2 * w1_14_16 + s6_output_2_3 * w1_15_16 + s6_output_2_4 * w1_16_16 + s6_output_2_5 * w1_17_16 + s6_output_3_0 * w1_18_16 + s6_output_3_1 * w1_19_16 + s6_output_3_2 * w1_20_16 + s6_output_3_3 * w1_21_16 + s6_output_3_4 * w1_22_16 + s6_output_3_5 * w1_23_16 + s6_output_4_0 * w1_24_16 + s6_output_4_1 * w1_25_16 + s6_output_4_2 * w1_26_16 + s6_output_4_3 * w1_27_16 + s6_output_4_4 * w1_28_16 + s6_output_4_5 * w1_29_16 + s6_output_5_0 * w1_30_16 + s6_output_5_1 * w1_31_16 + s6_output_5_2 * w1_32_16 + s6_output_5_3 * w1_33_16 + s6_output_5_4 * w1_34_16 + s6_output_5_5 * w1_35_16 + s6_output_6_0 * w1_36_16 + s6_output_6_1 * w1_37_16 + s6_output_6_2 * w1_38_16 + s6_output_6_3 * w1_39_16 + s6_output_6_4 * w1_40_16 + s6_output_6_5 * w1_41_16 + s6_output_7_0 * w1_42_16 + s6_output_7_1 * w1_43_16 + s6_output_7_2 * w1_44_16 + s6_output_7_3 * w1_45_16 + s6_output_7_4 * w1_46_16 + s6_output_7_5 * w1_47_16)[23:8] + b1_16;
        meta.result_0_17 = (s6_output_0_0 * w1_0_17 + s6_output_0_1 * w1_1_17 + s6_output_0_2 * w1_2_17 + s6_output_0_3 * w1_3_17 + s6_output_0_4 * w1_4_17 + s6_output_0_5 * w1_5_17 + s6_output_1_0 * w1_6_17 + s6_output_1_1 * w1_7_17 + s6_output_1_2 * w1_8_17 + s6_output_1_3 * w1_9_17 + s6_output_1_4 * w1_10_17 + s6_output_1_5 * w1_11_17 + s6_output_2_0 * w1_12_17 + s6_output_2_1 * w1_13_17 + s6_output_2_2 * w1_14_17 + s6_output_2_3 * w1_15_17 + s6_output_2_4 * w1_16_17 + s6_output_2_5 * w1_17_17 + s6_output_3_0 * w1_18_17 + s6_output_3_1 * w1_19_17 + s6_output_3_2 * w1_20_17 + s6_output_3_3 * w1_21_17 + s6_output_3_4 * w1_22_17 + s6_output_3_5 * w1_23_17 + s6_output_4_0 * w1_24_17 + s6_output_4_1 * w1_25_17 + s6_output_4_2 * w1_26_17 + s6_output_4_3 * w1_27_17 + s6_output_4_4 * w1_28_17 + s6_output_4_5 * w1_29_17 + s6_output_5_0 * w1_30_17 + s6_output_5_1 * w1_31_17 + s6_output_5_2 * w1_32_17 + s6_output_5_3 * w1_33_17 + s6_output_5_4 * w1_34_17 + s6_output_5_5 * w1_35_17 + s6_output_6_0 * w1_36_17 + s6_output_6_1 * w1_37_17 + s6_output_6_2 * w1_38_17 + s6_output_6_3 * w1_39_17 + s6_output_6_4 * w1_40_17 + s6_output_6_5 * w1_41_17 + s6_output_7_0 * w1_42_17 + s6_output_7_1 * w1_43_17 + s6_output_7_2 * w1_44_17 + s6_output_7_3 * w1_45_17 + s6_output_7_4 * w1_46_17 + s6_output_7_5 * w1_47_17)[23:8] + b1_17;
        meta.result_0_18 = (s6_output_0_0 * w1_0_18 + s6_output_0_1 * w1_1_18 + s6_output_0_2 * w1_2_18 + s6_output_0_3 * w1_3_18 + s6_output_0_4 * w1_4_18 + s6_output_0_5 * w1_5_18 + s6_output_1_0 * w1_6_18 + s6_output_1_1 * w1_7_18 + s6_output_1_2 * w1_8_18 + s6_output_1_3 * w1_9_18 + s6_output_1_4 * w1_10_18 + s6_output_1_5 * w1_11_18 + s6_output_2_0 * w1_12_18 + s6_output_2_1 * w1_13_18 + s6_output_2_2 * w1_14_18 + s6_output_2_3 * w1_15_18 + s6_output_2_4 * w1_16_18 + s6_output_2_5 * w1_17_18 + s6_output_3_0 * w1_18_18 + s6_output_3_1 * w1_19_18 + s6_output_3_2 * w1_20_18 + s6_output_3_3 * w1_21_18 + s6_output_3_4 * w1_22_18 + s6_output_3_5 * w1_23_18 + s6_output_4_0 * w1_24_18 + s6_output_4_1 * w1_25_18 + s6_output_4_2 * w1_26_18 + s6_output_4_3 * w1_27_18 + s6_output_4_4 * w1_28_18 + s6_output_4_5 * w1_29_18 + s6_output_5_0 * w1_30_18 + s6_output_5_1 * w1_31_18 + s6_output_5_2 * w1_32_18 + s6_output_5_3 * w1_33_18 + s6_output_5_4 * w1_34_18 + s6_output_5_5 * w1_35_18 + s6_output_6_0 * w1_36_18 + s6_output_6_1 * w1_37_18 + s6_output_6_2 * w1_38_18 + s6_output_6_3 * w1_39_18 + s6_output_6_4 * w1_40_18 + s6_output_6_5 * w1_41_18 + s6_output_7_0 * w1_42_18 + s6_output_7_1 * w1_43_18 + s6_output_7_2 * w1_44_18 + s6_output_7_3 * w1_45_18 + s6_output_7_4 * w1_46_18 + s6_output_7_5 * w1_47_18)[23:8] + b1_18;
        meta.result_0_19 = (s6_output_0_0 * w1_0_19 + s6_output_0_1 * w1_1_19 + s6_output_0_2 * w1_2_19 + s6_output_0_3 * w1_3_19 + s6_output_0_4 * w1_4_19 + s6_output_0_5 * w1_5_19 + s6_output_1_0 * w1_6_19 + s6_output_1_1 * w1_7_19 + s6_output_1_2 * w1_8_19 + s6_output_1_3 * w1_9_19 + s6_output_1_4 * w1_10_19 + s6_output_1_5 * w1_11_19 + s6_output_2_0 * w1_12_19 + s6_output_2_1 * w1_13_19 + s6_output_2_2 * w1_14_19 + s6_output_2_3 * w1_15_19 + s6_output_2_4 * w1_16_19 + s6_output_2_5 * w1_17_19 + s6_output_3_0 * w1_18_19 + s6_output_3_1 * w1_19_19 + s6_output_3_2 * w1_20_19 + s6_output_3_3 * w1_21_19 + s6_output_3_4 * w1_22_19 + s6_output_3_5 * w1_23_19 + s6_output_4_0 * w1_24_19 + s6_output_4_1 * w1_25_19 + s6_output_4_2 * w1_26_19 + s6_output_4_3 * w1_27_19 + s6_output_4_4 * w1_28_19 + s6_output_4_5 * w1_29_19 + s6_output_5_0 * w1_30_19 + s6_output_5_1 * w1_31_19 + s6_output_5_2 * w1_32_19 + s6_output_5_3 * w1_33_19 + s6_output_5_4 * w1_34_19 + s6_output_5_5 * w1_35_19 + s6_output_6_0 * w1_36_19 + s6_output_6_1 * w1_37_19 + s6_output_6_2 * w1_38_19 + s6_output_6_3 * w1_39_19 + s6_output_6_4 * w1_40_19 + s6_output_6_5 * w1_41_19 + s6_output_7_0 * w1_42_19 + s6_output_7_1 * w1_43_19 + s6_output_7_2 * w1_44_19 + s6_output_7_3 * w1_45_19 + s6_output_7_4 * w1_46_19 + s6_output_7_5 * w1_47_19)[23:8] + b1_19;
        meta.result_0_20 = (s6_output_0_0 * w1_0_20 + s6_output_0_1 * w1_1_20 + s6_output_0_2 * w1_2_20 + s6_output_0_3 * w1_3_20 + s6_output_0_4 * w1_4_20 + s6_output_0_5 * w1_5_20 + s6_output_1_0 * w1_6_20 + s6_output_1_1 * w1_7_20 + s6_output_1_2 * w1_8_20 + s6_output_1_3 * w1_9_20 + s6_output_1_4 * w1_10_20 + s6_output_1_5 * w1_11_20 + s6_output_2_0 * w1_12_20 + s6_output_2_1 * w1_13_20 + s6_output_2_2 * w1_14_20 + s6_output_2_3 * w1_15_20 + s6_output_2_4 * w1_16_20 + s6_output_2_5 * w1_17_20 + s6_output_3_0 * w1_18_20 + s6_output_3_1 * w1_19_20 + s6_output_3_2 * w1_20_20 + s6_output_3_3 * w1_21_20 + s6_output_3_4 * w1_22_20 + s6_output_3_5 * w1_23_20 + s6_output_4_0 * w1_24_20 + s6_output_4_1 * w1_25_20 + s6_output_4_2 * w1_26_20 + s6_output_4_3 * w1_27_20 + s6_output_4_4 * w1_28_20 + s6_output_4_5 * w1_29_20 + s6_output_5_0 * w1_30_20 + s6_output_5_1 * w1_31_20 + s6_output_5_2 * w1_32_20 + s6_output_5_3 * w1_33_20 + s6_output_5_4 * w1_34_20 + s6_output_5_5 * w1_35_20 + s6_output_6_0 * w1_36_20 + s6_output_6_1 * w1_37_20 + s6_output_6_2 * w1_38_20 + s6_output_6_3 * w1_39_20 + s6_output_6_4 * w1_40_20 + s6_output_6_5 * w1_41_20 + s6_output_7_0 * w1_42_20 + s6_output_7_1 * w1_43_20 + s6_output_7_2 * w1_44_20 + s6_output_7_3 * w1_45_20 + s6_output_7_4 * w1_46_20 + s6_output_7_5 * w1_47_20)[23:8] + b1_20;
        meta.result_0_21 = (s6_output_0_0 * w1_0_21 + s6_output_0_1 * w1_1_21 + s6_output_0_2 * w1_2_21 + s6_output_0_3 * w1_3_21 + s6_output_0_4 * w1_4_21 + s6_output_0_5 * w1_5_21 + s6_output_1_0 * w1_6_21 + s6_output_1_1 * w1_7_21 + s6_output_1_2 * w1_8_21 + s6_output_1_3 * w1_9_21 + s6_output_1_4 * w1_10_21 + s6_output_1_5 * w1_11_21 + s6_output_2_0 * w1_12_21 + s6_output_2_1 * w1_13_21 + s6_output_2_2 * w1_14_21 + s6_output_2_3 * w1_15_21 + s6_output_2_4 * w1_16_21 + s6_output_2_5 * w1_17_21 + s6_output_3_0 * w1_18_21 + s6_output_3_1 * w1_19_21 + s6_output_3_2 * w1_20_21 + s6_output_3_3 * w1_21_21 + s6_output_3_4 * w1_22_21 + s6_output_3_5 * w1_23_21 + s6_output_4_0 * w1_24_21 + s6_output_4_1 * w1_25_21 + s6_output_4_2 * w1_26_21 + s6_output_4_3 * w1_27_21 + s6_output_4_4 * w1_28_21 + s6_output_4_5 * w1_29_21 + s6_output_5_0 * w1_30_21 + s6_output_5_1 * w1_31_21 + s6_output_5_2 * w1_32_21 + s6_output_5_3 * w1_33_21 + s6_output_5_4 * w1_34_21 + s6_output_5_5 * w1_35_21 + s6_output_6_0 * w1_36_21 + s6_output_6_1 * w1_37_21 + s6_output_6_2 * w1_38_21 + s6_output_6_3 * w1_39_21 + s6_output_6_4 * w1_40_21 + s6_output_6_5 * w1_41_21 + s6_output_7_0 * w1_42_21 + s6_output_7_1 * w1_43_21 + s6_output_7_2 * w1_44_21 + s6_output_7_3 * w1_45_21 + s6_output_7_4 * w1_46_21 + s6_output_7_5 * w1_47_21)[23:8] + b1_21;
        meta.result_0_22 = (s6_output_0_0 * w1_0_22 + s6_output_0_1 * w1_1_22 + s6_output_0_2 * w1_2_22 + s6_output_0_3 * w1_3_22 + s6_output_0_4 * w1_4_22 + s6_output_0_5 * w1_5_22 + s6_output_1_0 * w1_6_22 + s6_output_1_1 * w1_7_22 + s6_output_1_2 * w1_8_22 + s6_output_1_3 * w1_9_22 + s6_output_1_4 * w1_10_22 + s6_output_1_5 * w1_11_22 + s6_output_2_0 * w1_12_22 + s6_output_2_1 * w1_13_22 + s6_output_2_2 * w1_14_22 + s6_output_2_3 * w1_15_22 + s6_output_2_4 * w1_16_22 + s6_output_2_5 * w1_17_22 + s6_output_3_0 * w1_18_22 + s6_output_3_1 * w1_19_22 + s6_output_3_2 * w1_20_22 + s6_output_3_3 * w1_21_22 + s6_output_3_4 * w1_22_22 + s6_output_3_5 * w1_23_22 + s6_output_4_0 * w1_24_22 + s6_output_4_1 * w1_25_22 + s6_output_4_2 * w1_26_22 + s6_output_4_3 * w1_27_22 + s6_output_4_4 * w1_28_22 + s6_output_4_5 * w1_29_22 + s6_output_5_0 * w1_30_22 + s6_output_5_1 * w1_31_22 + s6_output_5_2 * w1_32_22 + s6_output_5_3 * w1_33_22 + s6_output_5_4 * w1_34_22 + s6_output_5_5 * w1_35_22 + s6_output_6_0 * w1_36_22 + s6_output_6_1 * w1_37_22 + s6_output_6_2 * w1_38_22 + s6_output_6_3 * w1_39_22 + s6_output_6_4 * w1_40_22 + s6_output_6_5 * w1_41_22 + s6_output_7_0 * w1_42_22 + s6_output_7_1 * w1_43_22 + s6_output_7_2 * w1_44_22 + s6_output_7_3 * w1_45_22 + s6_output_7_4 * w1_46_22 + s6_output_7_5 * w1_47_22)[23:8] + b1_22;
        meta.result_0_23 = (s6_output_0_0 * w1_0_23 + s6_output_0_1 * w1_1_23 + s6_output_0_2 * w1_2_23 + s6_output_0_3 * w1_3_23 + s6_output_0_4 * w1_4_23 + s6_output_0_5 * w1_5_23 + s6_output_1_0 * w1_6_23 + s6_output_1_1 * w1_7_23 + s6_output_1_2 * w1_8_23 + s6_output_1_3 * w1_9_23 + s6_output_1_4 * w1_10_23 + s6_output_1_5 * w1_11_23 + s6_output_2_0 * w1_12_23 + s6_output_2_1 * w1_13_23 + s6_output_2_2 * w1_14_23 + s6_output_2_3 * w1_15_23 + s6_output_2_4 * w1_16_23 + s6_output_2_5 * w1_17_23 + s6_output_3_0 * w1_18_23 + s6_output_3_1 * w1_19_23 + s6_output_3_2 * w1_20_23 + s6_output_3_3 * w1_21_23 + s6_output_3_4 * w1_22_23 + s6_output_3_5 * w1_23_23 + s6_output_4_0 * w1_24_23 + s6_output_4_1 * w1_25_23 + s6_output_4_2 * w1_26_23 + s6_output_4_3 * w1_27_23 + s6_output_4_4 * w1_28_23 + s6_output_4_5 * w1_29_23 + s6_output_5_0 * w1_30_23 + s6_output_5_1 * w1_31_23 + s6_output_5_2 * w1_32_23 + s6_output_5_3 * w1_33_23 + s6_output_5_4 * w1_34_23 + s6_output_5_5 * w1_35_23 + s6_output_6_0 * w1_36_23 + s6_output_6_1 * w1_37_23 + s6_output_6_2 * w1_38_23 + s6_output_6_3 * w1_39_23 + s6_output_6_4 * w1_40_23 + s6_output_6_5 * w1_41_23 + s6_output_7_0 * w1_42_23 + s6_output_7_1 * w1_43_23 + s6_output_7_2 * w1_44_23 + s6_output_7_3 * w1_45_23 + s6_output_7_4 * w1_46_23 + s6_output_7_5 * w1_47_23)[23:8] + b1_23;
        meta.result_0_24 = (s6_output_0_0 * w1_0_24 + s6_output_0_1 * w1_1_24 + s6_output_0_2 * w1_2_24 + s6_output_0_3 * w1_3_24 + s6_output_0_4 * w1_4_24 + s6_output_0_5 * w1_5_24 + s6_output_1_0 * w1_6_24 + s6_output_1_1 * w1_7_24 + s6_output_1_2 * w1_8_24 + s6_output_1_3 * w1_9_24 + s6_output_1_4 * w1_10_24 + s6_output_1_5 * w1_11_24 + s6_output_2_0 * w1_12_24 + s6_output_2_1 * w1_13_24 + s6_output_2_2 * w1_14_24 + s6_output_2_3 * w1_15_24 + s6_output_2_4 * w1_16_24 + s6_output_2_5 * w1_17_24 + s6_output_3_0 * w1_18_24 + s6_output_3_1 * w1_19_24 + s6_output_3_2 * w1_20_24 + s6_output_3_3 * w1_21_24 + s6_output_3_4 * w1_22_24 + s6_output_3_5 * w1_23_24 + s6_output_4_0 * w1_24_24 + s6_output_4_1 * w1_25_24 + s6_output_4_2 * w1_26_24 + s6_output_4_3 * w1_27_24 + s6_output_4_4 * w1_28_24 + s6_output_4_5 * w1_29_24 + s6_output_5_0 * w1_30_24 + s6_output_5_1 * w1_31_24 + s6_output_5_2 * w1_32_24 + s6_output_5_3 * w1_33_24 + s6_output_5_4 * w1_34_24 + s6_output_5_5 * w1_35_24 + s6_output_6_0 * w1_36_24 + s6_output_6_1 * w1_37_24 + s6_output_6_2 * w1_38_24 + s6_output_6_3 * w1_39_24 + s6_output_6_4 * w1_40_24 + s6_output_6_5 * w1_41_24 + s6_output_7_0 * w1_42_24 + s6_output_7_1 * w1_43_24 + s6_output_7_2 * w1_44_24 + s6_output_7_3 * w1_45_24 + s6_output_7_4 * w1_46_24 + s6_output_7_5 * w1_47_24)[23:8] + b1_24;
        meta.result_0_25 = (s6_output_0_0 * w1_0_25 + s6_output_0_1 * w1_1_25 + s6_output_0_2 * w1_2_25 + s6_output_0_3 * w1_3_25 + s6_output_0_4 * w1_4_25 + s6_output_0_5 * w1_5_25 + s6_output_1_0 * w1_6_25 + s6_output_1_1 * w1_7_25 + s6_output_1_2 * w1_8_25 + s6_output_1_3 * w1_9_25 + s6_output_1_4 * w1_10_25 + s6_output_1_5 * w1_11_25 + s6_output_2_0 * w1_12_25 + s6_output_2_1 * w1_13_25 + s6_output_2_2 * w1_14_25 + s6_output_2_3 * w1_15_25 + s6_output_2_4 * w1_16_25 + s6_output_2_5 * w1_17_25 + s6_output_3_0 * w1_18_25 + s6_output_3_1 * w1_19_25 + s6_output_3_2 * w1_20_25 + s6_output_3_3 * w1_21_25 + s6_output_3_4 * w1_22_25 + s6_output_3_5 * w1_23_25 + s6_output_4_0 * w1_24_25 + s6_output_4_1 * w1_25_25 + s6_output_4_2 * w1_26_25 + s6_output_4_3 * w1_27_25 + s6_output_4_4 * w1_28_25 + s6_output_4_5 * w1_29_25 + s6_output_5_0 * w1_30_25 + s6_output_5_1 * w1_31_25 + s6_output_5_2 * w1_32_25 + s6_output_5_3 * w1_33_25 + s6_output_5_4 * w1_34_25 + s6_output_5_5 * w1_35_25 + s6_output_6_0 * w1_36_25 + s6_output_6_1 * w1_37_25 + s6_output_6_2 * w1_38_25 + s6_output_6_3 * w1_39_25 + s6_output_6_4 * w1_40_25 + s6_output_6_5 * w1_41_25 + s6_output_7_0 * w1_42_25 + s6_output_7_1 * w1_43_25 + s6_output_7_2 * w1_44_25 + s6_output_7_3 * w1_45_25 + s6_output_7_4 * w1_46_25 + s6_output_7_5 * w1_47_25)[23:8] + b1_25;
        meta.result_0_26 = (s6_output_0_0 * w1_0_26 + s6_output_0_1 * w1_1_26 + s6_output_0_2 * w1_2_26 + s6_output_0_3 * w1_3_26 + s6_output_0_4 * w1_4_26 + s6_output_0_5 * w1_5_26 + s6_output_1_0 * w1_6_26 + s6_output_1_1 * w1_7_26 + s6_output_1_2 * w1_8_26 + s6_output_1_3 * w1_9_26 + s6_output_1_4 * w1_10_26 + s6_output_1_5 * w1_11_26 + s6_output_2_0 * w1_12_26 + s6_output_2_1 * w1_13_26 + s6_output_2_2 * w1_14_26 + s6_output_2_3 * w1_15_26 + s6_output_2_4 * w1_16_26 + s6_output_2_5 * w1_17_26 + s6_output_3_0 * w1_18_26 + s6_output_3_1 * w1_19_26 + s6_output_3_2 * w1_20_26 + s6_output_3_3 * w1_21_26 + s6_output_3_4 * w1_22_26 + s6_output_3_5 * w1_23_26 + s6_output_4_0 * w1_24_26 + s6_output_4_1 * w1_25_26 + s6_output_4_2 * w1_26_26 + s6_output_4_3 * w1_27_26 + s6_output_4_4 * w1_28_26 + s6_output_4_5 * w1_29_26 + s6_output_5_0 * w1_30_26 + s6_output_5_1 * w1_31_26 + s6_output_5_2 * w1_32_26 + s6_output_5_3 * w1_33_26 + s6_output_5_4 * w1_34_26 + s6_output_5_5 * w1_35_26 + s6_output_6_0 * w1_36_26 + s6_output_6_1 * w1_37_26 + s6_output_6_2 * w1_38_26 + s6_output_6_3 * w1_39_26 + s6_output_6_4 * w1_40_26 + s6_output_6_5 * w1_41_26 + s6_output_7_0 * w1_42_26 + s6_output_7_1 * w1_43_26 + s6_output_7_2 * w1_44_26 + s6_output_7_3 * w1_45_26 + s6_output_7_4 * w1_46_26 + s6_output_7_5 * w1_47_26)[23:8] + b1_26;
        meta.result_0_27 = (s6_output_0_0 * w1_0_27 + s6_output_0_1 * w1_1_27 + s6_output_0_2 * w1_2_27 + s6_output_0_3 * w1_3_27 + s6_output_0_4 * w1_4_27 + s6_output_0_5 * w1_5_27 + s6_output_1_0 * w1_6_27 + s6_output_1_1 * w1_7_27 + s6_output_1_2 * w1_8_27 + s6_output_1_3 * w1_9_27 + s6_output_1_4 * w1_10_27 + s6_output_1_5 * w1_11_27 + s6_output_2_0 * w1_12_27 + s6_output_2_1 * w1_13_27 + s6_output_2_2 * w1_14_27 + s6_output_2_3 * w1_15_27 + s6_output_2_4 * w1_16_27 + s6_output_2_5 * w1_17_27 + s6_output_3_0 * w1_18_27 + s6_output_3_1 * w1_19_27 + s6_output_3_2 * w1_20_27 + s6_output_3_3 * w1_21_27 + s6_output_3_4 * w1_22_27 + s6_output_3_5 * w1_23_27 + s6_output_4_0 * w1_24_27 + s6_output_4_1 * w1_25_27 + s6_output_4_2 * w1_26_27 + s6_output_4_3 * w1_27_27 + s6_output_4_4 * w1_28_27 + s6_output_4_5 * w1_29_27 + s6_output_5_0 * w1_30_27 + s6_output_5_1 * w1_31_27 + s6_output_5_2 * w1_32_27 + s6_output_5_3 * w1_33_27 + s6_output_5_4 * w1_34_27 + s6_output_5_5 * w1_35_27 + s6_output_6_0 * w1_36_27 + s6_output_6_1 * w1_37_27 + s6_output_6_2 * w1_38_27 + s6_output_6_3 * w1_39_27 + s6_output_6_4 * w1_40_27 + s6_output_6_5 * w1_41_27 + s6_output_7_0 * w1_42_27 + s6_output_7_1 * w1_43_27 + s6_output_7_2 * w1_44_27 + s6_output_7_3 * w1_45_27 + s6_output_7_4 * w1_46_27 + s6_output_7_5 * w1_47_27)[23:8] + b1_27;
        meta.result_0_28 = (s6_output_0_0 * w1_0_28 + s6_output_0_1 * w1_1_28 + s6_output_0_2 * w1_2_28 + s6_output_0_3 * w1_3_28 + s6_output_0_4 * w1_4_28 + s6_output_0_5 * w1_5_28 + s6_output_1_0 * w1_6_28 + s6_output_1_1 * w1_7_28 + s6_output_1_2 * w1_8_28 + s6_output_1_3 * w1_9_28 + s6_output_1_4 * w1_10_28 + s6_output_1_5 * w1_11_28 + s6_output_2_0 * w1_12_28 + s6_output_2_1 * w1_13_28 + s6_output_2_2 * w1_14_28 + s6_output_2_3 * w1_15_28 + s6_output_2_4 * w1_16_28 + s6_output_2_5 * w1_17_28 + s6_output_3_0 * w1_18_28 + s6_output_3_1 * w1_19_28 + s6_output_3_2 * w1_20_28 + s6_output_3_3 * w1_21_28 + s6_output_3_4 * w1_22_28 + s6_output_3_5 * w1_23_28 + s6_output_4_0 * w1_24_28 + s6_output_4_1 * w1_25_28 + s6_output_4_2 * w1_26_28 + s6_output_4_3 * w1_27_28 + s6_output_4_4 * w1_28_28 + s6_output_4_5 * w1_29_28 + s6_output_5_0 * w1_30_28 + s6_output_5_1 * w1_31_28 + s6_output_5_2 * w1_32_28 + s6_output_5_3 * w1_33_28 + s6_output_5_4 * w1_34_28 + s6_output_5_5 * w1_35_28 + s6_output_6_0 * w1_36_28 + s6_output_6_1 * w1_37_28 + s6_output_6_2 * w1_38_28 + s6_output_6_3 * w1_39_28 + s6_output_6_4 * w1_40_28 + s6_output_6_5 * w1_41_28 + s6_output_7_0 * w1_42_28 + s6_output_7_1 * w1_43_28 + s6_output_7_2 * w1_44_28 + s6_output_7_3 * w1_45_28 + s6_output_7_4 * w1_46_28 + s6_output_7_5 * w1_47_28)[23:8] + b1_28;
        meta.result_0_29 = (s6_output_0_0 * w1_0_29 + s6_output_0_1 * w1_1_29 + s6_output_0_2 * w1_2_29 + s6_output_0_3 * w1_3_29 + s6_output_0_4 * w1_4_29 + s6_output_0_5 * w1_5_29 + s6_output_1_0 * w1_6_29 + s6_output_1_1 * w1_7_29 + s6_output_1_2 * w1_8_29 + s6_output_1_3 * w1_9_29 + s6_output_1_4 * w1_10_29 + s6_output_1_5 * w1_11_29 + s6_output_2_0 * w1_12_29 + s6_output_2_1 * w1_13_29 + s6_output_2_2 * w1_14_29 + s6_output_2_3 * w1_15_29 + s6_output_2_4 * w1_16_29 + s6_output_2_5 * w1_17_29 + s6_output_3_0 * w1_18_29 + s6_output_3_1 * w1_19_29 + s6_output_3_2 * w1_20_29 + s6_output_3_3 * w1_21_29 + s6_output_3_4 * w1_22_29 + s6_output_3_5 * w1_23_29 + s6_output_4_0 * w1_24_29 + s6_output_4_1 * w1_25_29 + s6_output_4_2 * w1_26_29 + s6_output_4_3 * w1_27_29 + s6_output_4_4 * w1_28_29 + s6_output_4_5 * w1_29_29 + s6_output_5_0 * w1_30_29 + s6_output_5_1 * w1_31_29 + s6_output_5_2 * w1_32_29 + s6_output_5_3 * w1_33_29 + s6_output_5_4 * w1_34_29 + s6_output_5_5 * w1_35_29 + s6_output_6_0 * w1_36_29 + s6_output_6_1 * w1_37_29 + s6_output_6_2 * w1_38_29 + s6_output_6_3 * w1_39_29 + s6_output_6_4 * w1_40_29 + s6_output_6_5 * w1_41_29 + s6_output_7_0 * w1_42_29 + s6_output_7_1 * w1_43_29 + s6_output_7_2 * w1_44_29 + s6_output_7_3 * w1_45_29 + s6_output_7_4 * w1_46_29 + s6_output_7_5 * w1_47_29)[23:8] + b1_29;
        meta.result_0_30 = (s6_output_0_0 * w1_0_30 + s6_output_0_1 * w1_1_30 + s6_output_0_2 * w1_2_30 + s6_output_0_3 * w1_3_30 + s6_output_0_4 * w1_4_30 + s6_output_0_5 * w1_5_30 + s6_output_1_0 * w1_6_30 + s6_output_1_1 * w1_7_30 + s6_output_1_2 * w1_8_30 + s6_output_1_3 * w1_9_30 + s6_output_1_4 * w1_10_30 + s6_output_1_5 * w1_11_30 + s6_output_2_0 * w1_12_30 + s6_output_2_1 * w1_13_30 + s6_output_2_2 * w1_14_30 + s6_output_2_3 * w1_15_30 + s6_output_2_4 * w1_16_30 + s6_output_2_5 * w1_17_30 + s6_output_3_0 * w1_18_30 + s6_output_3_1 * w1_19_30 + s6_output_3_2 * w1_20_30 + s6_output_3_3 * w1_21_30 + s6_output_3_4 * w1_22_30 + s6_output_3_5 * w1_23_30 + s6_output_4_0 * w1_24_30 + s6_output_4_1 * w1_25_30 + s6_output_4_2 * w1_26_30 + s6_output_4_3 * w1_27_30 + s6_output_4_4 * w1_28_30 + s6_output_4_5 * w1_29_30 + s6_output_5_0 * w1_30_30 + s6_output_5_1 * w1_31_30 + s6_output_5_2 * w1_32_30 + s6_output_5_3 * w1_33_30 + s6_output_5_4 * w1_34_30 + s6_output_5_5 * w1_35_30 + s6_output_6_0 * w1_36_30 + s6_output_6_1 * w1_37_30 + s6_output_6_2 * w1_38_30 + s6_output_6_3 * w1_39_30 + s6_output_6_4 * w1_40_30 + s6_output_6_5 * w1_41_30 + s6_output_7_0 * w1_42_30 + s6_output_7_1 * w1_43_30 + s6_output_7_2 * w1_44_30 + s6_output_7_3 * w1_45_30 + s6_output_7_4 * w1_46_30 + s6_output_7_5 * w1_47_30)[23:8] + b1_30;
        meta.result_0_31 = (s6_output_0_0 * w1_0_31 + s6_output_0_1 * w1_1_31 + s6_output_0_2 * w1_2_31 + s6_output_0_3 * w1_3_31 + s6_output_0_4 * w1_4_31 + s6_output_0_5 * w1_5_31 + s6_output_1_0 * w1_6_31 + s6_output_1_1 * w1_7_31 + s6_output_1_2 * w1_8_31 + s6_output_1_3 * w1_9_31 + s6_output_1_4 * w1_10_31 + s6_output_1_5 * w1_11_31 + s6_output_2_0 * w1_12_31 + s6_output_2_1 * w1_13_31 + s6_output_2_2 * w1_14_31 + s6_output_2_3 * w1_15_31 + s6_output_2_4 * w1_16_31 + s6_output_2_5 * w1_17_31 + s6_output_3_0 * w1_18_31 + s6_output_3_1 * w1_19_31 + s6_output_3_2 * w1_20_31 + s6_output_3_3 * w1_21_31 + s6_output_3_4 * w1_22_31 + s6_output_3_5 * w1_23_31 + s6_output_4_0 * w1_24_31 + s6_output_4_1 * w1_25_31 + s6_output_4_2 * w1_26_31 + s6_output_4_3 * w1_27_31 + s6_output_4_4 * w1_28_31 + s6_output_4_5 * w1_29_31 + s6_output_5_0 * w1_30_31 + s6_output_5_1 * w1_31_31 + s6_output_5_2 * w1_32_31 + s6_output_5_3 * w1_33_31 + s6_output_5_4 * w1_34_31 + s6_output_5_5 * w1_35_31 + s6_output_6_0 * w1_36_31 + s6_output_6_1 * w1_37_31 + s6_output_6_2 * w1_38_31 + s6_output_6_3 * w1_39_31 + s6_output_6_4 * w1_40_31 + s6_output_6_5 * w1_41_31 + s6_output_7_0 * w1_42_31 + s6_output_7_1 * w1_43_31 + s6_output_7_2 * w1_44_31 + s6_output_7_3 * w1_45_31 + s6_output_7_4 * w1_46_31 + s6_output_7_5 * w1_47_31)[23:8] + b1_31;                
        
        const bit<16> zero = 0x0;
        meta.result_0_0 = ((meta.result_0_0 & 0x8000) != 0) ? zero : meta.result_0_0;
        meta.result_0_1 = ((meta.result_0_1 & 0x8000) != 0) ? zero : meta.result_0_1;
        meta.result_0_2 = ((meta.result_0_2 & 0x8000) != 0) ? zero : meta.result_0_2;
        meta.result_0_3 = ((meta.result_0_3 & 0x8000) != 0) ? zero : meta.result_0_3;
        meta.result_0_4 = ((meta.result_0_4 & 0x8000) != 0) ? zero : meta.result_0_4;
        meta.result_0_5 = ((meta.result_0_5 & 0x8000) != 0) ? zero : meta.result_0_5;
        meta.result_0_6 = ((meta.result_0_6 & 0x8000) != 0) ? zero : meta.result_0_6;
        meta.result_0_7 = ((meta.result_0_7 & 0x8000) != 0) ? zero : meta.result_0_7;
        meta.result_0_8 = ((meta.result_0_8 & 0x8000) != 0) ? zero : meta.result_0_8;
        meta.result_0_9 = ((meta.result_0_9 & 0x8000) != 0) ? zero : meta.result_0_9;
        meta.result_0_10 = ((meta.result_0_10 & 0x8000) != 0) ? zero : meta.result_0_10;
        meta.result_0_11 = ((meta.result_0_11 & 0x8000) != 0) ? zero : meta.result_0_11;
        meta.result_0_12 = ((meta.result_0_12 & 0x8000) != 0) ? zero : meta.result_0_12;
        meta.result_0_13 = ((meta.result_0_13 & 0x8000) != 0) ? zero : meta.result_0_13;
        meta.result_0_14 = ((meta.result_0_14 & 0x8000) != 0) ? zero : meta.result_0_14;
        meta.result_0_15 = ((meta.result_0_15 & 0x8000) != 0) ? zero : meta.result_0_15;
        meta.result_0_16 = ((meta.result_0_16 & 0x8000) != 0) ? zero : meta.result_0_16;
        meta.result_0_17 = ((meta.result_0_17 & 0x8000) != 0) ? zero : meta.result_0_17;
        meta.result_0_18 = ((meta.result_0_18 & 0x8000) != 0) ? zero : meta.result_0_18;
        meta.result_0_19 = ((meta.result_0_19 & 0x8000) != 0) ? zero : meta.result_0_19;
        meta.result_0_20 = ((meta.result_0_20 & 0x8000) != 0) ? zero : meta.result_0_20;
        meta.result_0_21 = ((meta.result_0_21 & 0x8000) != 0) ? zero : meta.result_0_21;
        meta.result_0_22 = ((meta.result_0_22 & 0x8000) != 0) ? zero : meta.result_0_22;
        meta.result_0_23 = ((meta.result_0_23 & 0x8000) != 0) ? zero : meta.result_0_23;
        meta.result_0_24 = ((meta.result_0_24 & 0x8000) != 0) ? zero : meta.result_0_24;
        meta.result_0_25 = ((meta.result_0_25 & 0x8000) != 0) ? zero : meta.result_0_25;
        meta.result_0_26 = ((meta.result_0_26 & 0x8000) != 0) ? zero : meta.result_0_26;
        meta.result_0_27 = ((meta.result_0_27 & 0x8000) != 0) ? zero : meta.result_0_27;
        meta.result_0_28 = ((meta.result_0_28 & 0x8000) != 0) ? zero : meta.result_0_28;
        meta.result_0_29 = ((meta.result_0_29 & 0x8000) != 0) ? zero : meta.result_0_29;
        meta.result_0_30 = ((meta.result_0_30 & 0x8000) != 0) ? zero : meta.result_0_30;
        meta.result_0_31 = ((meta.result_0_31 & 0x8000) != 0) ? zero : meta.result_0_31;
    }


    action operation_drop_out() {
        const bit<32> probability = 50;
        const bit<16> zero = 0;
        bit<32> hash_value;

        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_0}, (bit<32>)250);
        meta.result_0_0 = (hash_value > probability) ? meta.result_0_0 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_1}, (bit<32>)250);
        meta.result_0_1 = (hash_value > probability) ? meta.result_0_1 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_2}, (bit<32>)250);
        meta.result_0_2 = (hash_value > probability) ? meta.result_0_2 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_3}, (bit<32>)250);
        meta.result_0_3 = (hash_value > probability) ? meta.result_0_3 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_4}, (bit<32>)250);
        meta.result_0_4 = (hash_value > probability) ? meta.result_0_4 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_5}, (bit<32>)250);
        meta.result_0_5 = (hash_value > probability) ? meta.result_0_5 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_6}, (bit<32>)250);
        meta.result_0_6 = (hash_value > probability) ? meta.result_0_6 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_7}, (bit<32>)250);
        meta.result_0_7 = (hash_value > probability) ? meta.result_0_7 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_8}, (bit<32>)250);
        meta.result_0_8 = (hash_value > probability) ? meta.result_0_8 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_9}, (bit<32>)250);
        meta.result_0_9 = (hash_value > probability) ? meta.result_0_9 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_10}, (bit<32>)250);
        meta.result_0_10 = (hash_value > probability) ? meta.result_0_10 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_11}, (bit<32>)250);
        meta.result_0_11 = (hash_value > probability) ? meta.result_0_11 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_12}, (bit<32>)250);
        meta.result_0_12 = (hash_value > probability) ? meta.result_0_12 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_13}, (bit<32>)250);
        meta.result_0_13 = (hash_value > probability) ? meta.result_0_13 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_14}, (bit<32>)250);
        meta.result_0_14 = (hash_value > probability) ? meta.result_0_14 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_15}, (bit<32>)250);
        meta.result_0_15 = (hash_value > probability) ? meta.result_0_15 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_16}, (bit<32>)250);
        meta.result_0_16 = (hash_value > probability) ? meta.result_0_16 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_17}, (bit<32>)250);
        meta.result_0_17 = (hash_value > probability) ? meta.result_0_17 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_18}, (bit<32>)250);
        meta.result_0_18 = (hash_value > probability) ? meta.result_0_18 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_19}, (bit<32>)250);
        meta.result_0_19 = (hash_value > probability) ? meta.result_0_19 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_20}, (bit<32>)250);
        meta.result_0_20 = (hash_value > probability) ? meta.result_0_20 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_21}, (bit<32>)250);
        meta.result_0_21 = (hash_value > probability) ? meta.result_0_21 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_22}, (bit<32>)250);
        meta.result_0_22 = (hash_value > probability) ? meta.result_0_22 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_23}, (bit<32>)250);
        meta.result_0_23 = (hash_value > probability) ? meta.result_0_23 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_24}, (bit<32>)250);
        meta.result_0_24 = (hash_value > probability) ? meta.result_0_24 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_25}, (bit<32>)250);
        meta.result_0_25 = (hash_value > probability) ? meta.result_0_25 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_26}, (bit<32>)250);
        meta.result_0_26 = (hash_value > probability) ? meta.result_0_26 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_27}, (bit<32>)250);
        meta.result_0_27 = (hash_value > probability) ? meta.result_0_27 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_28}, (bit<32>)250);
        meta.result_0_28 = (hash_value > probability) ? meta.result_0_28 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_29}, (bit<32>)250);
        meta.result_0_29 = (hash_value > probability) ? meta.result_0_29 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_30}, (bit<32>)250);
        meta.result_0_30 = (hash_value > probability) ? meta.result_0_30 : zero;
        hash(hash_value, HashAlgorithm.crc16, (bit<32>)0, {meta.result_0_31}, (bit<32>)250);
        meta.result_0_31 = (hash_value > probability) ? meta.result_0_31 : zero;
    }

    // (1*32) * (32*1) = (1*1)，这里实现的是sigmoid激活函数，也用泰勒公式展开
    action operation_linear2() {
        bit<32> result_0_0 = (bit<32>) meta.result_0_0 | (((meta.result_0_0 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_1 = (bit<32>) meta.result_0_1 | (((meta.result_0_1 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_2 = (bit<32>) meta.result_0_2 | (((meta.result_0_2 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_3 = (bit<32>) meta.result_0_3 | (((meta.result_0_3 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_4 = (bit<32>) meta.result_0_4 | (((meta.result_0_4 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_5 = (bit<32>) meta.result_0_5 | (((meta.result_0_5 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_6 = (bit<32>) meta.result_0_6 | (((meta.result_0_6 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_7 = (bit<32>) meta.result_0_7 | (((meta.result_0_7 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_8 = (bit<32>) meta.result_0_8 | (((meta.result_0_8 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_9 = (bit<32>) meta.result_0_9 | (((meta.result_0_9 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_10 = (bit<32>) meta.result_0_10 | (((meta.result_0_10 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_11 = (bit<32>) meta.result_0_11 | (((meta.result_0_11 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_12 = (bit<32>) meta.result_0_12 | (((meta.result_0_12 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_13 = (bit<32>) meta.result_0_13 | (((meta.result_0_13 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_14 = (bit<32>) meta.result_0_14 | (((meta.result_0_14 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_15 = (bit<32>) meta.result_0_15 | (((meta.result_0_15 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_16 = (bit<32>) meta.result_0_16 | (((meta.result_0_16 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_17 = (bit<32>) meta.result_0_17 | (((meta.result_0_17 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_18 = (bit<32>) meta.result_0_18 | (((meta.result_0_18 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_19 = (bit<32>) meta.result_0_19 | (((meta.result_0_19 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_20 = (bit<32>) meta.result_0_20 | (((meta.result_0_20 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_21 = (bit<32>) meta.result_0_21 | (((meta.result_0_21 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_22 = (bit<32>) meta.result_0_22 | (((meta.result_0_22 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_23 = (bit<32>) meta.result_0_23 | (((meta.result_0_23 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_24 = (bit<32>) meta.result_0_24 | (((meta.result_0_24 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_25 = (bit<32>) meta.result_0_25 | (((meta.result_0_25 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_26 = (bit<32>) meta.result_0_26 | (((meta.result_0_26 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_27 = (bit<32>) meta.result_0_27 | (((meta.result_0_27 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_28 = (bit<32>) meta.result_0_28 | (((meta.result_0_28 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_29 = (bit<32>) meta.result_0_29 | (((meta.result_0_29 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_30 = (bit<32>) meta.result_0_30 | (((meta.result_0_30 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);
        bit<32> result_0_31 = (bit<32>) meta.result_0_31 | (((meta.result_0_31 & 0x8000) != 0) ? 32w0xFFFF0000 : 0);

        meta.result16 = (result_0_0 * w2_0_0 + result_0_1 * w2_1_0 + result_0_2 * w2_2_0 + result_0_3 * w2_3_0 + result_0_4 * w2_4_0 + result_0_5 * w2_5_0 + result_0_6 * w2_6_0 + result_0_7 * w2_7_0 + result_0_8 * w2_8_0 + result_0_9 * w2_9_0 + result_0_10 * w2_10_0 + result_0_11 * w2_11_0 + result_0_12 * w2_12_0 + result_0_13 * w2_13_0 + result_0_14 * w2_14_0 + result_0_15 * w2_15_0 + result_0_16 * w2_16_0 + result_0_17 * w2_17_0 + result_0_18 * w2_18_0 + result_0_19 * w2_19_0 + result_0_20 * w2_20_0 + result_0_21 * w2_21_0 + result_0_22 * w2_22_0 + result_0_23 * w2_23_0 + result_0_24 * w2_24_0 + result_0_25 * w2_25_0 + result_0_26 * w2_26_0 + result_0_27 * w2_27_0 + result_0_28 * w2_28_0 + result_0_29 * w2_29_0 + result_0_30 * w2_30_0 + result_0_31 * w2_31_0)[23:8] + b_reduce;
    }

    // 设置输出
    action operation_set(bit<16> result_sigmoid) {
        hdr.s7_output0_calc.s7_output = result_sigmoid;
    }

    // 正数的sigmoid
    table operation_sigmoid_positive {
        key ={
            meta.result16 : exact;
        }
        actions ={
            operation_drop;
            operation_set;
        }
        default_action = operation_drop();
        size = 1598;
    }

    // 负数的sigmoid
    table operation_sigmoid_negative {
        key ={
            meta.result16 : exact;
        }
        actions ={
            operation_drop;
            operation_set;
        }
        default_action = operation_drop();
        size = 1598;
    }
    


    apply {
        if (hdr.p4calc.isValid()) {
            operation_linear1();
            operation_drop_out();
            operation_linear2();
            hdr.s7_output0_calc.s7_before_sigmoid = meta.result16;

            if(meta.result16[15:15] == 0) { // 正数
                if(meta.result16 > 0x063C){ // 大于6.23，直接约等于1，因为我的精度不足以表示这么小的数
                    hdr.s7_output0_calc.s7_output = 0x1;
                } else {
                    operation_sigmoid_positive.apply();
                }
            }
            else {
                if (meta.result16 > 0xF9C3) { // 小于-6.24，直接约等于0，因为我的精度不足以表示这么小的数
                    operation_sigmoid_negative.apply();
                } else {
                    hdr.s7_output0_calc.s7_output = 0x0;
                }    
            }
            
            standard_metadata.egress_spec = 2;
        } else {
            operation_drop();
        }
    }
}

/*************************************************************************
 ****************  E G R E S S   P R O C E S S I N G   *******************
 *************************************************************************/
control MyEgress(inout headers hdr,
                 inout metadata meta,
                 inout standard_metadata_t standard_metadata) {
    apply { }
}

/*************************************************************************
 *************   C H E C K S U M    C O M P U T A T I O N   **************
 *************************************************************************/

control MyComputeChecksum(inout headers hdr, inout metadata meta) {
    apply { }
}

/*************************************************************************
 ***********************  D E P A R S E R  *******************************
 *************************************************************************/
control MyDeparser(packet_out packet, in headers hdr) {
    apply {
        packet.emit(hdr.ethernet);
        packet.emit(hdr.ptp);
        packet.emit(hdr.p4calc);
        packet.emit(hdr.s0_output0_calc);
        packet.emit(hdr.s1_output0_calc);
        packet.emit(hdr.s7_output0_calc);
    }
}

/*************************************************************************
 ***********************  S W I T T C H **********************************
 *************************************************************************/

V1Switch(
MyParser(),
MyVerifyChecksum(),
MyIngress(),
MyEgress(),
MyComputeChecksum(),
MyDeparser()
) main;